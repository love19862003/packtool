// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: monsterConfig.proto

#ifndef PROTOBUF_INCLUDED_monsterConfig_2eproto
#define PROTOBUF_INCLUDED_monsterConfig_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "roleConfig.pb.h"
#include "ConfigTypeGroup.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_monsterConfig_2eproto 

namespace protobuf_monsterConfig_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[2];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_monsterConfig_2eproto
namespace Pro {
class monsterConfig;
class monsterConfigDefaultTypeInternal;
extern monsterConfigDefaultTypeInternal _monsterConfig_default_instance_;
class monsterConfig_ConfigTypeGroupmonstertype;
class monsterConfig_ConfigTypeGroupmonstertypeDefaultTypeInternal;
extern monsterConfig_ConfigTypeGroupmonstertypeDefaultTypeInternal _monsterConfig_ConfigTypeGroupmonstertype_default_instance_;
}  // namespace Pro
namespace google {
namespace protobuf {
template<> ::Pro::monsterConfig* Arena::CreateMaybeMessage<::Pro::monsterConfig>(Arena*);
template<> ::Pro::monsterConfig_ConfigTypeGroupmonstertype* Arena::CreateMaybeMessage<::Pro::monsterConfig_ConfigTypeGroupmonstertype>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace Pro {

enum monsterConfig_monstertype {
  monsterConfig_monstertype_unknow_zero = 0,
  monsterConfig_monstertype_mini_monster = 1,
  monsterConfig_monstertype_middile_monster = 2,
  monsterConfig_monstertype_big_monter = 3,
  monsterConfig_monstertype_monsterConfig_monstertype_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  monsterConfig_monstertype_monsterConfig_monstertype_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool monsterConfig_monstertype_IsValid(int value);
const monsterConfig_monstertype monsterConfig_monstertype_monstertype_MIN = monsterConfig_monstertype_unknow_zero;
const monsterConfig_monstertype monsterConfig_monstertype_monstertype_MAX = monsterConfig_monstertype_big_monter;
const int monsterConfig_monstertype_monstertype_ARRAYSIZE = monsterConfig_monstertype_monstertype_MAX + 1;

const ::google::protobuf::EnumDescriptor* monsterConfig_monstertype_descriptor();
inline const ::std::string& monsterConfig_monstertype_Name(monsterConfig_monstertype value) {
  return ::google::protobuf::internal::NameOfEnum(
    monsterConfig_monstertype_descriptor(), value);
}
inline bool monsterConfig_monstertype_Parse(
    const ::std::string& name, monsterConfig_monstertype* value) {
  return ::google::protobuf::internal::ParseNamedEnum<monsterConfig_monstertype>(
    monsterConfig_monstertype_descriptor(), name, value);
}
// ===================================================================

class monsterConfig_ConfigTypeGroupmonstertype : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Pro.monsterConfig.ConfigTypeGroupmonstertype) */ {
 public:
  monsterConfig_ConfigTypeGroupmonstertype();
  virtual ~monsterConfig_ConfigTypeGroupmonstertype();

  monsterConfig_ConfigTypeGroupmonstertype(const monsterConfig_ConfigTypeGroupmonstertype& from);

  inline monsterConfig_ConfigTypeGroupmonstertype& operator=(const monsterConfig_ConfigTypeGroupmonstertype& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  monsterConfig_ConfigTypeGroupmonstertype(monsterConfig_ConfigTypeGroupmonstertype&& from) noexcept
    : monsterConfig_ConfigTypeGroupmonstertype() {
    *this = ::std::move(from);
  }

  inline monsterConfig_ConfigTypeGroupmonstertype& operator=(monsterConfig_ConfigTypeGroupmonstertype&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const monsterConfig_ConfigTypeGroupmonstertype& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const monsterConfig_ConfigTypeGroupmonstertype* internal_default_instance() {
    return reinterpret_cast<const monsterConfig_ConfigTypeGroupmonstertype*>(
               &_monsterConfig_ConfigTypeGroupmonstertype_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(monsterConfig_ConfigTypeGroupmonstertype* other);
  friend void swap(monsterConfig_ConfigTypeGroupmonstertype& a, monsterConfig_ConfigTypeGroupmonstertype& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline monsterConfig_ConfigTypeGroupmonstertype* New() const final {
    return CreateMaybeMessage<monsterConfig_ConfigTypeGroupmonstertype>(NULL);
  }

  monsterConfig_ConfigTypeGroupmonstertype* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<monsterConfig_ConfigTypeGroupmonstertype>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const monsterConfig_ConfigTypeGroupmonstertype& from);
  void MergeFrom(const monsterConfig_ConfigTypeGroupmonstertype& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(monsterConfig_ConfigTypeGroupmonstertype* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Pro.monsterConfig.monstertype array = 1;
  int array_size() const;
  void clear_array();
  static const int kArrayFieldNumber = 1;
  ::Pro::monsterConfig_monstertype array(int index) const;
  void set_array(int index, ::Pro::monsterConfig_monstertype value);
  void add_array(::Pro::monsterConfig_monstertype value);
  const ::google::protobuf::RepeatedField<int>& array() const;
  ::google::protobuf::RepeatedField<int>* mutable_array();

  // @@protoc_insertion_point(class_scope:Pro.monsterConfig.ConfigTypeGroupmonstertype)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField<int> array_;
  mutable int _array_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_monsterConfig_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class monsterConfig : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Pro.monsterConfig) */ {
 public:
  monsterConfig();
  virtual ~monsterConfig();

  monsterConfig(const monsterConfig& from);

  inline monsterConfig& operator=(const monsterConfig& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  monsterConfig(monsterConfig&& from) noexcept
    : monsterConfig() {
    *this = ::std::move(from);
  }

  inline monsterConfig& operator=(monsterConfig&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const monsterConfig& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const monsterConfig* internal_default_instance() {
    return reinterpret_cast<const monsterConfig*>(
               &_monsterConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(monsterConfig* other);
  friend void swap(monsterConfig& a, monsterConfig& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline monsterConfig* New() const final {
    return CreateMaybeMessage<monsterConfig>(NULL);
  }

  monsterConfig* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<monsterConfig>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const monsterConfig& from);
  void MergeFrom(const monsterConfig& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(monsterConfig* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef monsterConfig_ConfigTypeGroupmonstertype ConfigTypeGroupmonstertype;

  typedef monsterConfig_monstertype monstertype;
  static const monstertype unknow_zero =
    monsterConfig_monstertype_unknow_zero;
  static const monstertype mini_monster =
    monsterConfig_monstertype_mini_monster;
  static const monstertype middile_monster =
    monsterConfig_monstertype_middile_monster;
  static const monstertype big_monter =
    monsterConfig_monstertype_big_monter;
  static inline bool monstertype_IsValid(int value) {
    return monsterConfig_monstertype_IsValid(value);
  }
  static const monstertype monstertype_MIN =
    monsterConfig_monstertype_monstertype_MIN;
  static const monstertype monstertype_MAX =
    monsterConfig_monstertype_monstertype_MAX;
  static const int monstertype_ARRAYSIZE =
    monsterConfig_monstertype_monstertype_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  monstertype_descriptor() {
    return monsterConfig_monstertype_descriptor();
  }
  static inline const ::std::string& monstertype_Name(monstertype value) {
    return monsterConfig_monstertype_Name(value);
  }
  static inline bool monstertype_Parse(const ::std::string& name,
      monstertype* value) {
    return monsterConfig_monstertype_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .Pro.ConfigTypeGroupfloat group_float = 2;
  int group_float_size() const;
  void clear_group_float();
  static const int kGroupFloatFieldNumber = 2;
  ::Pro::ConfigTypeGroupfloat* mutable_group_float(int index);
  ::google::protobuf::RepeatedPtrField< ::Pro::ConfigTypeGroupfloat >*
      mutable_group_float();
  const ::Pro::ConfigTypeGroupfloat& group_float(int index) const;
  ::Pro::ConfigTypeGroupfloat* add_group_float();
  const ::google::protobuf::RepeatedPtrField< ::Pro::ConfigTypeGroupfloat >&
      group_float() const;

  // repeated .Pro.ConfigTypeGroupstring group_string = 3;
  int group_string_size() const;
  void clear_group_string();
  static const int kGroupStringFieldNumber = 3;
  ::Pro::ConfigTypeGroupstring* mutable_group_string(int index);
  ::google::protobuf::RepeatedPtrField< ::Pro::ConfigTypeGroupstring >*
      mutable_group_string();
  const ::Pro::ConfigTypeGroupstring& group_string(int index) const;
  ::Pro::ConfigTypeGroupstring* add_group_string();
  const ::google::protobuf::RepeatedPtrField< ::Pro::ConfigTypeGroupstring >&
      group_string() const;

  // repeated .Pro.ProCoordinate c2 = 8;
  int c2_size() const;
  void clear_c2();
  static const int kC2FieldNumber = 8;
  ::Pro::ProCoordinate* mutable_c2(int index);
  ::google::protobuf::RepeatedPtrField< ::Pro::ProCoordinate >*
      mutable_c2();
  const ::Pro::ProCoordinate& c2(int index) const;
  ::Pro::ProCoordinate* add_c2();
  const ::google::protobuf::RepeatedPtrField< ::Pro::ProCoordinate >&
      c2() const;

  // repeated .Pro.ConfigTypeGroupProCoordinate c3 = 9;
  int c3_size() const;
  void clear_c3();
  static const int kC3FieldNumber = 9;
  ::Pro::ConfigTypeGroupProCoordinate* mutable_c3(int index);
  ::google::protobuf::RepeatedPtrField< ::Pro::ConfigTypeGroupProCoordinate >*
      mutable_c3();
  const ::Pro::ConfigTypeGroupProCoordinate& c3(int index) const;
  ::Pro::ConfigTypeGroupProCoordinate* add_c3();
  const ::google::protobuf::RepeatedPtrField< ::Pro::ConfigTypeGroupProCoordinate >&
      c3() const;

  // repeated int32 c4 = 10;
  int c4_size() const;
  void clear_c4();
  static const int kC4FieldNumber = 10;
  ::google::protobuf::int32 c4(int index) const;
  void set_c4(int index, ::google::protobuf::int32 value);
  void add_c4(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      c4() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_c4();

  // repeated .Pro.ConfigTypeGroupint32 c5 = 11;
  int c5_size() const;
  void clear_c5();
  static const int kC5FieldNumber = 11;
  ::Pro::ConfigTypeGroupint32* mutable_c5(int index);
  ::google::protobuf::RepeatedPtrField< ::Pro::ConfigTypeGroupint32 >*
      mutable_c5();
  const ::Pro::ConfigTypeGroupint32& c5(int index) const;
  ::Pro::ConfigTypeGroupint32* add_c5();
  const ::google::protobuf::RepeatedPtrField< ::Pro::ConfigTypeGroupint32 >&
      c5() const;

  // repeated bool c8 = 12;
  int c8_size() const;
  void clear_c8();
  static const int kC8FieldNumber = 12;
  bool c8(int index) const;
  void set_c8(int index, bool value);
  void add_c8(bool value);
  const ::google::protobuf::RepeatedField< bool >&
      c8() const;
  ::google::protobuf::RepeatedField< bool >*
      mutable_c8();

  // repeated .Pro.ConfigTypeGroupbool c7 = 14;
  int c7_size() const;
  void clear_c7();
  static const int kC7FieldNumber = 14;
  ::Pro::ConfigTypeGroupbool* mutable_c7(int index);
  ::google::protobuf::RepeatedPtrField< ::Pro::ConfigTypeGroupbool >*
      mutable_c7();
  const ::Pro::ConfigTypeGroupbool& c7(int index) const;
  ::Pro::ConfigTypeGroupbool* add_c7();
  const ::google::protobuf::RepeatedPtrField< ::Pro::ConfigTypeGroupbool >&
      c7() const;

  // repeated .Pro.ProInt5 c10 = 16;
  int c10_size() const;
  void clear_c10();
  static const int kC10FieldNumber = 16;
  ::Pro::ProInt5* mutable_c10(int index);
  ::google::protobuf::RepeatedPtrField< ::Pro::ProInt5 >*
      mutable_c10();
  const ::Pro::ProInt5& c10(int index) const;
  ::Pro::ProInt5* add_c10();
  const ::google::protobuf::RepeatedPtrField< ::Pro::ProInt5 >&
      c10() const;

  // repeated .Pro.ConfigTypeGroupProInt5 c11 = 17;
  int c11_size() const;
  void clear_c11();
  static const int kC11FieldNumber = 17;
  ::Pro::ConfigTypeGroupProInt5* mutable_c11(int index);
  ::google::protobuf::RepeatedPtrField< ::Pro::ConfigTypeGroupProInt5 >*
      mutable_c11();
  const ::Pro::ConfigTypeGroupProInt5& c11(int index) const;
  ::Pro::ConfigTypeGroupProInt5* add_c11();
  const ::google::protobuf::RepeatedPtrField< ::Pro::ConfigTypeGroupProInt5 >&
      c11() const;

  // string id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // .Pro.ProCoordinate c1 = 7;
  bool has_c1() const;
  void clear_c1();
  static const int kC1FieldNumber = 7;
  private:
  const ::Pro::ProCoordinate& _internal_c1() const;
  public:
  const ::Pro::ProCoordinate& c1() const;
  ::Pro::ProCoordinate* release_c1();
  ::Pro::ProCoordinate* mutable_c1();
  void set_allocated_c1(::Pro::ProCoordinate* c1);

  // .Pro.ProInt5 c9 = 15;
  bool has_c9() const;
  void clear_c9();
  static const int kC9FieldNumber = 15;
  private:
  const ::Pro::ProInt5& _internal_c9() const;
  public:
  const ::Pro::ProInt5& c9() const;
  ::Pro::ProInt5* release_c9();
  ::Pro::ProInt5* mutable_c9();
  void set_allocated_c9(::Pro::ProInt5* c9);

  // .Pro.roleConfig.jobtype job = 4;
  void clear_job();
  static const int kJobFieldNumber = 4;
  ::Pro::roleConfig_jobtype job() const;
  void set_job(::Pro::roleConfig_jobtype value);

  // int32 level = 5;
  void clear_level();
  static const int kLevelFieldNumber = 5;
  ::google::protobuf::int32 level() const;
  void set_level(::google::protobuf::int32 value);

  // int32 sub = 6;
  void clear_sub();
  static const int kSubFieldNumber = 6;
  ::google::protobuf::int32 sub() const;
  void set_sub(::google::protobuf::int32 value);

  // bool c6 = 13;
  void clear_c6();
  static const int kC6FieldNumber = 13;
  bool c6() const;
  void set_c6(bool value);

  // @@protoc_insertion_point(class_scope:Pro.monsterConfig)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::Pro::ConfigTypeGroupfloat > group_float_;
  ::google::protobuf::RepeatedPtrField< ::Pro::ConfigTypeGroupstring > group_string_;
  ::google::protobuf::RepeatedPtrField< ::Pro::ProCoordinate > c2_;
  ::google::protobuf::RepeatedPtrField< ::Pro::ConfigTypeGroupProCoordinate > c3_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > c4_;
  mutable int _c4_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::Pro::ConfigTypeGroupint32 > c5_;
  ::google::protobuf::RepeatedField< bool > c8_;
  mutable int _c8_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::Pro::ConfigTypeGroupbool > c7_;
  ::google::protobuf::RepeatedPtrField< ::Pro::ProInt5 > c10_;
  ::google::protobuf::RepeatedPtrField< ::Pro::ConfigTypeGroupProInt5 > c11_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  ::Pro::ProCoordinate* c1_;
  ::Pro::ProInt5* c9_;
  int job_;
  ::google::protobuf::int32 level_;
  ::google::protobuf::int32 sub_;
  bool c6_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_monsterConfig_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// monsterConfig_ConfigTypeGroupmonstertype

// repeated .Pro.monsterConfig.monstertype array = 1;
inline int monsterConfig_ConfigTypeGroupmonstertype::array_size() const {
  return array_.size();
}
inline void monsterConfig_ConfigTypeGroupmonstertype::clear_array() {
  array_.Clear();
}
inline ::Pro::monsterConfig_monstertype monsterConfig_ConfigTypeGroupmonstertype::array(int index) const {
  // @@protoc_insertion_point(field_get:Pro.monsterConfig.ConfigTypeGroupmonstertype.array)
  return static_cast< ::Pro::monsterConfig_monstertype >(array_.Get(index));
}
inline void monsterConfig_ConfigTypeGroupmonstertype::set_array(int index, ::Pro::monsterConfig_monstertype value) {
  array_.Set(index, value);
  // @@protoc_insertion_point(field_set:Pro.monsterConfig.ConfigTypeGroupmonstertype.array)
}
inline void monsterConfig_ConfigTypeGroupmonstertype::add_array(::Pro::monsterConfig_monstertype value) {
  array_.Add(value);
  // @@protoc_insertion_point(field_add:Pro.monsterConfig.ConfigTypeGroupmonstertype.array)
}
inline const ::google::protobuf::RepeatedField<int>&
monsterConfig_ConfigTypeGroupmonstertype::array() const {
  // @@protoc_insertion_point(field_list:Pro.monsterConfig.ConfigTypeGroupmonstertype.array)
  return array_;
}
inline ::google::protobuf::RepeatedField<int>*
monsterConfig_ConfigTypeGroupmonstertype::mutable_array() {
  // @@protoc_insertion_point(field_mutable_list:Pro.monsterConfig.ConfigTypeGroupmonstertype.array)
  return &array_;
}

// -------------------------------------------------------------------

// monsterConfig

// string id = 1;
inline void monsterConfig::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& monsterConfig::id() const {
  // @@protoc_insertion_point(field_get:Pro.monsterConfig.id)
  return id_.GetNoArena();
}
inline void monsterConfig::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Pro.monsterConfig.id)
}
#if LANG_CXX11
inline void monsterConfig::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Pro.monsterConfig.id)
}
#endif
inline void monsterConfig::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Pro.monsterConfig.id)
}
inline void monsterConfig::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Pro.monsterConfig.id)
}
inline ::std::string* monsterConfig::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:Pro.monsterConfig.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* monsterConfig::release_id() {
  // @@protoc_insertion_point(field_release:Pro.monsterConfig.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void monsterConfig::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:Pro.monsterConfig.id)
}

// repeated .Pro.ConfigTypeGroupfloat group_float = 2;
inline int monsterConfig::group_float_size() const {
  return group_float_.size();
}
inline ::Pro::ConfigTypeGroupfloat* monsterConfig::mutable_group_float(int index) {
  // @@protoc_insertion_point(field_mutable:Pro.monsterConfig.group_float)
  return group_float_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::Pro::ConfigTypeGroupfloat >*
monsterConfig::mutable_group_float() {
  // @@protoc_insertion_point(field_mutable_list:Pro.monsterConfig.group_float)
  return &group_float_;
}
inline const ::Pro::ConfigTypeGroupfloat& monsterConfig::group_float(int index) const {
  // @@protoc_insertion_point(field_get:Pro.monsterConfig.group_float)
  return group_float_.Get(index);
}
inline ::Pro::ConfigTypeGroupfloat* monsterConfig::add_group_float() {
  // @@protoc_insertion_point(field_add:Pro.monsterConfig.group_float)
  return group_float_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Pro::ConfigTypeGroupfloat >&
monsterConfig::group_float() const {
  // @@protoc_insertion_point(field_list:Pro.monsterConfig.group_float)
  return group_float_;
}

// repeated .Pro.ConfigTypeGroupstring group_string = 3;
inline int monsterConfig::group_string_size() const {
  return group_string_.size();
}
inline ::Pro::ConfigTypeGroupstring* monsterConfig::mutable_group_string(int index) {
  // @@protoc_insertion_point(field_mutable:Pro.monsterConfig.group_string)
  return group_string_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::Pro::ConfigTypeGroupstring >*
monsterConfig::mutable_group_string() {
  // @@protoc_insertion_point(field_mutable_list:Pro.monsterConfig.group_string)
  return &group_string_;
}
inline const ::Pro::ConfigTypeGroupstring& monsterConfig::group_string(int index) const {
  // @@protoc_insertion_point(field_get:Pro.monsterConfig.group_string)
  return group_string_.Get(index);
}
inline ::Pro::ConfigTypeGroupstring* monsterConfig::add_group_string() {
  // @@protoc_insertion_point(field_add:Pro.monsterConfig.group_string)
  return group_string_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Pro::ConfigTypeGroupstring >&
monsterConfig::group_string() const {
  // @@protoc_insertion_point(field_list:Pro.monsterConfig.group_string)
  return group_string_;
}

// .Pro.roleConfig.jobtype job = 4;
inline void monsterConfig::clear_job() {
  job_ = 0;
}
inline ::Pro::roleConfig_jobtype monsterConfig::job() const {
  // @@protoc_insertion_point(field_get:Pro.monsterConfig.job)
  return static_cast< ::Pro::roleConfig_jobtype >(job_);
}
inline void monsterConfig::set_job(::Pro::roleConfig_jobtype value) {
  
  job_ = value;
  // @@protoc_insertion_point(field_set:Pro.monsterConfig.job)
}

// int32 level = 5;
inline void monsterConfig::clear_level() {
  level_ = 0;
}
inline ::google::protobuf::int32 monsterConfig::level() const {
  // @@protoc_insertion_point(field_get:Pro.monsterConfig.level)
  return level_;
}
inline void monsterConfig::set_level(::google::protobuf::int32 value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:Pro.monsterConfig.level)
}

// int32 sub = 6;
inline void monsterConfig::clear_sub() {
  sub_ = 0;
}
inline ::google::protobuf::int32 monsterConfig::sub() const {
  // @@protoc_insertion_point(field_get:Pro.monsterConfig.sub)
  return sub_;
}
inline void monsterConfig::set_sub(::google::protobuf::int32 value) {
  
  sub_ = value;
  // @@protoc_insertion_point(field_set:Pro.monsterConfig.sub)
}

// .Pro.ProCoordinate c1 = 7;
inline bool monsterConfig::has_c1() const {
  return this != internal_default_instance() && c1_ != NULL;
}
inline const ::Pro::ProCoordinate& monsterConfig::_internal_c1() const {
  return *c1_;
}
inline const ::Pro::ProCoordinate& monsterConfig::c1() const {
  const ::Pro::ProCoordinate* p = c1_;
  // @@protoc_insertion_point(field_get:Pro.monsterConfig.c1)
  return p != NULL ? *p : *reinterpret_cast<const ::Pro::ProCoordinate*>(
      &::Pro::_ProCoordinate_default_instance_);
}
inline ::Pro::ProCoordinate* monsterConfig::release_c1() {
  // @@protoc_insertion_point(field_release:Pro.monsterConfig.c1)
  
  ::Pro::ProCoordinate* temp = c1_;
  c1_ = NULL;
  return temp;
}
inline ::Pro::ProCoordinate* monsterConfig::mutable_c1() {
  
  if (c1_ == NULL) {
    auto* p = CreateMaybeMessage<::Pro::ProCoordinate>(GetArenaNoVirtual());
    c1_ = p;
  }
  // @@protoc_insertion_point(field_mutable:Pro.monsterConfig.c1)
  return c1_;
}
inline void monsterConfig::set_allocated_c1(::Pro::ProCoordinate* c1) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(c1_);
  }
  if (c1) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      c1 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, c1, submessage_arena);
    }
    
  } else {
    
  }
  c1_ = c1;
  // @@protoc_insertion_point(field_set_allocated:Pro.monsterConfig.c1)
}

// repeated .Pro.ProCoordinate c2 = 8;
inline int monsterConfig::c2_size() const {
  return c2_.size();
}
inline ::Pro::ProCoordinate* monsterConfig::mutable_c2(int index) {
  // @@protoc_insertion_point(field_mutable:Pro.monsterConfig.c2)
  return c2_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::Pro::ProCoordinate >*
monsterConfig::mutable_c2() {
  // @@protoc_insertion_point(field_mutable_list:Pro.monsterConfig.c2)
  return &c2_;
}
inline const ::Pro::ProCoordinate& monsterConfig::c2(int index) const {
  // @@protoc_insertion_point(field_get:Pro.monsterConfig.c2)
  return c2_.Get(index);
}
inline ::Pro::ProCoordinate* monsterConfig::add_c2() {
  // @@protoc_insertion_point(field_add:Pro.monsterConfig.c2)
  return c2_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Pro::ProCoordinate >&
monsterConfig::c2() const {
  // @@protoc_insertion_point(field_list:Pro.monsterConfig.c2)
  return c2_;
}

// repeated .Pro.ConfigTypeGroupProCoordinate c3 = 9;
inline int monsterConfig::c3_size() const {
  return c3_.size();
}
inline ::Pro::ConfigTypeGroupProCoordinate* monsterConfig::mutable_c3(int index) {
  // @@protoc_insertion_point(field_mutable:Pro.monsterConfig.c3)
  return c3_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::Pro::ConfigTypeGroupProCoordinate >*
monsterConfig::mutable_c3() {
  // @@protoc_insertion_point(field_mutable_list:Pro.monsterConfig.c3)
  return &c3_;
}
inline const ::Pro::ConfigTypeGroupProCoordinate& monsterConfig::c3(int index) const {
  // @@protoc_insertion_point(field_get:Pro.monsterConfig.c3)
  return c3_.Get(index);
}
inline ::Pro::ConfigTypeGroupProCoordinate* monsterConfig::add_c3() {
  // @@protoc_insertion_point(field_add:Pro.monsterConfig.c3)
  return c3_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Pro::ConfigTypeGroupProCoordinate >&
monsterConfig::c3() const {
  // @@protoc_insertion_point(field_list:Pro.monsterConfig.c3)
  return c3_;
}

// repeated int32 c4 = 10;
inline int monsterConfig::c4_size() const {
  return c4_.size();
}
inline void monsterConfig::clear_c4() {
  c4_.Clear();
}
inline ::google::protobuf::int32 monsterConfig::c4(int index) const {
  // @@protoc_insertion_point(field_get:Pro.monsterConfig.c4)
  return c4_.Get(index);
}
inline void monsterConfig::set_c4(int index, ::google::protobuf::int32 value) {
  c4_.Set(index, value);
  // @@protoc_insertion_point(field_set:Pro.monsterConfig.c4)
}
inline void monsterConfig::add_c4(::google::protobuf::int32 value) {
  c4_.Add(value);
  // @@protoc_insertion_point(field_add:Pro.monsterConfig.c4)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
monsterConfig::c4() const {
  // @@protoc_insertion_point(field_list:Pro.monsterConfig.c4)
  return c4_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
monsterConfig::mutable_c4() {
  // @@protoc_insertion_point(field_mutable_list:Pro.monsterConfig.c4)
  return &c4_;
}

// repeated .Pro.ConfigTypeGroupint32 c5 = 11;
inline int monsterConfig::c5_size() const {
  return c5_.size();
}
inline ::Pro::ConfigTypeGroupint32* monsterConfig::mutable_c5(int index) {
  // @@protoc_insertion_point(field_mutable:Pro.monsterConfig.c5)
  return c5_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::Pro::ConfigTypeGroupint32 >*
monsterConfig::mutable_c5() {
  // @@protoc_insertion_point(field_mutable_list:Pro.monsterConfig.c5)
  return &c5_;
}
inline const ::Pro::ConfigTypeGroupint32& monsterConfig::c5(int index) const {
  // @@protoc_insertion_point(field_get:Pro.monsterConfig.c5)
  return c5_.Get(index);
}
inline ::Pro::ConfigTypeGroupint32* monsterConfig::add_c5() {
  // @@protoc_insertion_point(field_add:Pro.monsterConfig.c5)
  return c5_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Pro::ConfigTypeGroupint32 >&
monsterConfig::c5() const {
  // @@protoc_insertion_point(field_list:Pro.monsterConfig.c5)
  return c5_;
}

// repeated bool c8 = 12;
inline int monsterConfig::c8_size() const {
  return c8_.size();
}
inline void monsterConfig::clear_c8() {
  c8_.Clear();
}
inline bool monsterConfig::c8(int index) const {
  // @@protoc_insertion_point(field_get:Pro.monsterConfig.c8)
  return c8_.Get(index);
}
inline void monsterConfig::set_c8(int index, bool value) {
  c8_.Set(index, value);
  // @@protoc_insertion_point(field_set:Pro.monsterConfig.c8)
}
inline void monsterConfig::add_c8(bool value) {
  c8_.Add(value);
  // @@protoc_insertion_point(field_add:Pro.monsterConfig.c8)
}
inline const ::google::protobuf::RepeatedField< bool >&
monsterConfig::c8() const {
  // @@protoc_insertion_point(field_list:Pro.monsterConfig.c8)
  return c8_;
}
inline ::google::protobuf::RepeatedField< bool >*
monsterConfig::mutable_c8() {
  // @@protoc_insertion_point(field_mutable_list:Pro.monsterConfig.c8)
  return &c8_;
}

// bool c6 = 13;
inline void monsterConfig::clear_c6() {
  c6_ = false;
}
inline bool monsterConfig::c6() const {
  // @@protoc_insertion_point(field_get:Pro.monsterConfig.c6)
  return c6_;
}
inline void monsterConfig::set_c6(bool value) {
  
  c6_ = value;
  // @@protoc_insertion_point(field_set:Pro.monsterConfig.c6)
}

// repeated .Pro.ConfigTypeGroupbool c7 = 14;
inline int monsterConfig::c7_size() const {
  return c7_.size();
}
inline ::Pro::ConfigTypeGroupbool* monsterConfig::mutable_c7(int index) {
  // @@protoc_insertion_point(field_mutable:Pro.monsterConfig.c7)
  return c7_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::Pro::ConfigTypeGroupbool >*
monsterConfig::mutable_c7() {
  // @@protoc_insertion_point(field_mutable_list:Pro.monsterConfig.c7)
  return &c7_;
}
inline const ::Pro::ConfigTypeGroupbool& monsterConfig::c7(int index) const {
  // @@protoc_insertion_point(field_get:Pro.monsterConfig.c7)
  return c7_.Get(index);
}
inline ::Pro::ConfigTypeGroupbool* monsterConfig::add_c7() {
  // @@protoc_insertion_point(field_add:Pro.monsterConfig.c7)
  return c7_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Pro::ConfigTypeGroupbool >&
monsterConfig::c7() const {
  // @@protoc_insertion_point(field_list:Pro.monsterConfig.c7)
  return c7_;
}

// .Pro.ProInt5 c9 = 15;
inline bool monsterConfig::has_c9() const {
  return this != internal_default_instance() && c9_ != NULL;
}
inline const ::Pro::ProInt5& monsterConfig::_internal_c9() const {
  return *c9_;
}
inline const ::Pro::ProInt5& monsterConfig::c9() const {
  const ::Pro::ProInt5* p = c9_;
  // @@protoc_insertion_point(field_get:Pro.monsterConfig.c9)
  return p != NULL ? *p : *reinterpret_cast<const ::Pro::ProInt5*>(
      &::Pro::_ProInt5_default_instance_);
}
inline ::Pro::ProInt5* monsterConfig::release_c9() {
  // @@protoc_insertion_point(field_release:Pro.monsterConfig.c9)
  
  ::Pro::ProInt5* temp = c9_;
  c9_ = NULL;
  return temp;
}
inline ::Pro::ProInt5* monsterConfig::mutable_c9() {
  
  if (c9_ == NULL) {
    auto* p = CreateMaybeMessage<::Pro::ProInt5>(GetArenaNoVirtual());
    c9_ = p;
  }
  // @@protoc_insertion_point(field_mutable:Pro.monsterConfig.c9)
  return c9_;
}
inline void monsterConfig::set_allocated_c9(::Pro::ProInt5* c9) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(c9_);
  }
  if (c9) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      c9 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, c9, submessage_arena);
    }
    
  } else {
    
  }
  c9_ = c9;
  // @@protoc_insertion_point(field_set_allocated:Pro.monsterConfig.c9)
}

// repeated .Pro.ProInt5 c10 = 16;
inline int monsterConfig::c10_size() const {
  return c10_.size();
}
inline ::Pro::ProInt5* monsterConfig::mutable_c10(int index) {
  // @@protoc_insertion_point(field_mutable:Pro.monsterConfig.c10)
  return c10_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::Pro::ProInt5 >*
monsterConfig::mutable_c10() {
  // @@protoc_insertion_point(field_mutable_list:Pro.monsterConfig.c10)
  return &c10_;
}
inline const ::Pro::ProInt5& monsterConfig::c10(int index) const {
  // @@protoc_insertion_point(field_get:Pro.monsterConfig.c10)
  return c10_.Get(index);
}
inline ::Pro::ProInt5* monsterConfig::add_c10() {
  // @@protoc_insertion_point(field_add:Pro.monsterConfig.c10)
  return c10_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Pro::ProInt5 >&
monsterConfig::c10() const {
  // @@protoc_insertion_point(field_list:Pro.monsterConfig.c10)
  return c10_;
}

// repeated .Pro.ConfigTypeGroupProInt5 c11 = 17;
inline int monsterConfig::c11_size() const {
  return c11_.size();
}
inline ::Pro::ConfigTypeGroupProInt5* monsterConfig::mutable_c11(int index) {
  // @@protoc_insertion_point(field_mutable:Pro.monsterConfig.c11)
  return c11_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::Pro::ConfigTypeGroupProInt5 >*
monsterConfig::mutable_c11() {
  // @@protoc_insertion_point(field_mutable_list:Pro.monsterConfig.c11)
  return &c11_;
}
inline const ::Pro::ConfigTypeGroupProInt5& monsterConfig::c11(int index) const {
  // @@protoc_insertion_point(field_get:Pro.monsterConfig.c11)
  return c11_.Get(index);
}
inline ::Pro::ConfigTypeGroupProInt5* monsterConfig::add_c11() {
  // @@protoc_insertion_point(field_add:Pro.monsterConfig.c11)
  return c11_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Pro::ConfigTypeGroupProInt5 >&
monsterConfig::c11() const {
  // @@protoc_insertion_point(field_list:Pro.monsterConfig.c11)
  return c11_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace Pro

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::Pro::monsterConfig_monstertype> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Pro::monsterConfig_monstertype>() {
  return ::Pro::monsterConfig_monstertype_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_monsterConfig_2eproto
