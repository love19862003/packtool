// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: EnumDefineConfig.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "EnumDefineConfig.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace Pro {

namespace {

const ::google::protobuf::Descriptor* ConfigTypeGroupcamptype_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ConfigTypeGroupcamptype_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* camptype_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_EnumDefineConfig_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_EnumDefineConfig_2eproto() {
  protobuf_AddDesc_EnumDefineConfig_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "EnumDefineConfig.proto");
  GOOGLE_CHECK(file != NULL);
  ConfigTypeGroupcamptype_descriptor_ = file->message_type(0);
  static const int ConfigTypeGroupcamptype_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfigTypeGroupcamptype, array_),
  };
  ConfigTypeGroupcamptype_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ConfigTypeGroupcamptype_descriptor_,
      ConfigTypeGroupcamptype::internal_default_instance(),
      ConfigTypeGroupcamptype_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfigTypeGroupcamptype, _has_bits_),
      -1,
      -1,
      sizeof(ConfigTypeGroupcamptype),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfigTypeGroupcamptype, _internal_metadata_));
  camptype_descriptor_ = file->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_EnumDefineConfig_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ConfigTypeGroupcamptype_descriptor_, ConfigTypeGroupcamptype::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_EnumDefineConfig_2eproto() {
  ConfigTypeGroupcamptype_default_instance_.Shutdown();
  delete ConfigTypeGroupcamptype_reflection_;
}

void protobuf_InitDefaults_EnumDefineConfig_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ConfigTypeGroupcamptype_default_instance_.DefaultConstruct();
  ConfigTypeGroupcamptype_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_EnumDefineConfig_2eproto_once_);
void protobuf_InitDefaults_EnumDefineConfig_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_EnumDefineConfig_2eproto_once_,
                 &protobuf_InitDefaults_EnumDefineConfig_2eproto_impl);
}
void protobuf_AddDesc_EnumDefineConfig_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_EnumDefineConfig_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\026EnumDefineConfig.proto\022\003Pro\"7\n\027ConfigT"
    "ypeGroupcamptype\022\034\n\005array\030\001 \003(\0162\r.Pro.ca"
    "mptype*)\n\010camptype\022\016\n\ncamp_light\020\001\022\r\n\tca"
    "mp_dark\020\002", 129);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "EnumDefineConfig.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_EnumDefineConfig_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_EnumDefineConfig_2eproto_once_);
void protobuf_AddDesc_EnumDefineConfig_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_EnumDefineConfig_2eproto_once_,
                 &protobuf_AddDesc_EnumDefineConfig_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_EnumDefineConfig_2eproto {
  StaticDescriptorInitializer_EnumDefineConfig_2eproto() {
    protobuf_AddDesc_EnumDefineConfig_2eproto();
  }
} static_descriptor_initializer_EnumDefineConfig_2eproto_;
const ::google::protobuf::EnumDescriptor* camptype_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return camptype_descriptor_;
}
bool camptype_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConfigTypeGroupcamptype::kArrayFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConfigTypeGroupcamptype::ConfigTypeGroupcamptype()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_EnumDefineConfig_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pro.ConfigTypeGroupcamptype)
}

void ConfigTypeGroupcamptype::InitAsDefaultInstance() {
}

ConfigTypeGroupcamptype::ConfigTypeGroupcamptype(const ConfigTypeGroupcamptype& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Pro.ConfigTypeGroupcamptype)
}

void ConfigTypeGroupcamptype::SharedCtor() {
  _cached_size_ = 0;
}

ConfigTypeGroupcamptype::~ConfigTypeGroupcamptype() {
  // @@protoc_insertion_point(destructor:Pro.ConfigTypeGroupcamptype)
  SharedDtor();
}

void ConfigTypeGroupcamptype::SharedDtor() {
}

void ConfigTypeGroupcamptype::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ConfigTypeGroupcamptype::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ConfigTypeGroupcamptype_descriptor_;
}

const ConfigTypeGroupcamptype& ConfigTypeGroupcamptype::default_instance() {
  protobuf_InitDefaults_EnumDefineConfig_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ConfigTypeGroupcamptype> ConfigTypeGroupcamptype_default_instance_;

ConfigTypeGroupcamptype* ConfigTypeGroupcamptype::New(::google::protobuf::Arena* arena) const {
  ConfigTypeGroupcamptype* n = new ConfigTypeGroupcamptype;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ConfigTypeGroupcamptype::Clear() {
// @@protoc_insertion_point(message_clear_start:Pro.ConfigTypeGroupcamptype)
  array_.Clear();
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ConfigTypeGroupcamptype::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pro.ConfigTypeGroupcamptype)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Pro.camptype array = 1;
      case 1: {
        if (tag == 8) {
         parse_array:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::Pro::camptype_IsValid(value)) {
            add_array(static_cast< ::Pro::camptype >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormat::ReadPackedEnumPreserveUnknowns(
                 input,
                 1,
                 ::Pro::camptype_IsValid,
                 mutable_unknown_fields(),
                 this->mutable_array())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(8)) goto parse_array;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pro.ConfigTypeGroupcamptype)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pro.ConfigTypeGroupcamptype)
  return false;
#undef DO_
}

void ConfigTypeGroupcamptype::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pro.ConfigTypeGroupcamptype)
  // repeated .Pro.camptype array = 1;
  for (int i = 0; i < this->array_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->array(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Pro.ConfigTypeGroupcamptype)
}

::google::protobuf::uint8* ConfigTypeGroupcamptype::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Pro.ConfigTypeGroupcamptype)
  // repeated .Pro.camptype array = 1;
  for (int i = 0; i < this->array_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->array(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pro.ConfigTypeGroupcamptype)
  return target;
}

size_t ConfigTypeGroupcamptype::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Pro.ConfigTypeGroupcamptype)
  size_t total_size = 0;

  // repeated .Pro.camptype array = 1;
  {
    size_t data_size = 0;
    unsigned int count = this->array_size();for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->array(i));
    }
    total_size += (1UL * count) + data_size;
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ConfigTypeGroupcamptype::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Pro.ConfigTypeGroupcamptype)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ConfigTypeGroupcamptype* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ConfigTypeGroupcamptype>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Pro.ConfigTypeGroupcamptype)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Pro.ConfigTypeGroupcamptype)
    UnsafeMergeFrom(*source);
  }
}

void ConfigTypeGroupcamptype::MergeFrom(const ConfigTypeGroupcamptype& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Pro.ConfigTypeGroupcamptype)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ConfigTypeGroupcamptype::UnsafeMergeFrom(const ConfigTypeGroupcamptype& from) {
  GOOGLE_DCHECK(&from != this);
  array_.UnsafeMergeFrom(from.array_);
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void ConfigTypeGroupcamptype::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Pro.ConfigTypeGroupcamptype)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConfigTypeGroupcamptype::CopyFrom(const ConfigTypeGroupcamptype& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Pro.ConfigTypeGroupcamptype)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ConfigTypeGroupcamptype::IsInitialized() const {

  return true;
}

void ConfigTypeGroupcamptype::Swap(ConfigTypeGroupcamptype* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ConfigTypeGroupcamptype::InternalSwap(ConfigTypeGroupcamptype* other) {
  array_.UnsafeArenaSwap(&other->array_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ConfigTypeGroupcamptype::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ConfigTypeGroupcamptype_descriptor_;
  metadata.reflection = ConfigTypeGroupcamptype_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ConfigTypeGroupcamptype

// repeated .Pro.camptype array = 1;
int ConfigTypeGroupcamptype::array_size() const {
  return array_.size();
}
void ConfigTypeGroupcamptype::clear_array() {
  array_.Clear();
}
::Pro::camptype ConfigTypeGroupcamptype::array(int index) const {
  // @@protoc_insertion_point(field_get:Pro.ConfigTypeGroupcamptype.array)
  return static_cast< ::Pro::camptype >(array_.Get(index));
}
void ConfigTypeGroupcamptype::set_array(int index, ::Pro::camptype value) {
  assert(::Pro::camptype_IsValid(value));
  array_.Set(index, value);
  // @@protoc_insertion_point(field_set:Pro.ConfigTypeGroupcamptype.array)
}
void ConfigTypeGroupcamptype::add_array(::Pro::camptype value) {
  assert(::Pro::camptype_IsValid(value));
  array_.Add(value);
  // @@protoc_insertion_point(field_add:Pro.ConfigTypeGroupcamptype.array)
}
const ::google::protobuf::RepeatedField<int>&
ConfigTypeGroupcamptype::array() const {
  // @@protoc_insertion_point(field_list:Pro.ConfigTypeGroupcamptype.array)
  return array_;
}
::google::protobuf::RepeatedField<int>*
ConfigTypeGroupcamptype::mutable_array() {
  // @@protoc_insertion_point(field_mutable_list:Pro.ConfigTypeGroupcamptype.array)
  return &array_;
}

inline const ConfigTypeGroupcamptype* ConfigTypeGroupcamptype::internal_default_instance() {
  return &ConfigTypeGroupcamptype_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace Pro

// @@protoc_insertion_point(global_scope)
