// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: monsterConfig.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "monsterConfig.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace Pro {

namespace {

const ::google::protobuf::Descriptor* monsterConfig_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  monsterConfig_reflection_ = NULL;
const ::google::protobuf::Descriptor* monsterConfig_ConfigTypeGroupmonstertype_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  monsterConfig_ConfigTypeGroupmonstertype_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* monsterConfig_monstertype_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_monsterConfig_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_monsterConfig_2eproto() {
  protobuf_AddDesc_monsterConfig_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "monsterConfig.proto");
  GOOGLE_CHECK(file != NULL);
  monsterConfig_descriptor_ = file->message_type(0);
  static const int monsterConfig_offsets_[14] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(monsterConfig, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(monsterConfig, group_float_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(monsterConfig, group_string_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(monsterConfig, job_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(monsterConfig, level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(monsterConfig, sub_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(monsterConfig, c1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(monsterConfig, c2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(monsterConfig, c3_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(monsterConfig, c4_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(monsterConfig, c5_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(monsterConfig, c8_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(monsterConfig, c6_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(monsterConfig, c7_),
  };
  monsterConfig_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      monsterConfig_descriptor_,
      monsterConfig::internal_default_instance(),
      monsterConfig_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(monsterConfig, _has_bits_),
      -1,
      -1,
      sizeof(monsterConfig),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(monsterConfig, _internal_metadata_));
  monsterConfig_ConfigTypeGroupmonstertype_descriptor_ = monsterConfig_descriptor_->nested_type(0);
  static const int monsterConfig_ConfigTypeGroupmonstertype_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(monsterConfig_ConfigTypeGroupmonstertype, array_),
  };
  monsterConfig_ConfigTypeGroupmonstertype_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      monsterConfig_ConfigTypeGroupmonstertype_descriptor_,
      monsterConfig_ConfigTypeGroupmonstertype::internal_default_instance(),
      monsterConfig_ConfigTypeGroupmonstertype_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(monsterConfig_ConfigTypeGroupmonstertype, _has_bits_),
      -1,
      -1,
      sizeof(monsterConfig_ConfigTypeGroupmonstertype),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(monsterConfig_ConfigTypeGroupmonstertype, _internal_metadata_));
  monsterConfig_monstertype_descriptor_ = monsterConfig_descriptor_->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_monsterConfig_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      monsterConfig_descriptor_, monsterConfig::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      monsterConfig_ConfigTypeGroupmonstertype_descriptor_, monsterConfig_ConfigTypeGroupmonstertype::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_monsterConfig_2eproto() {
  monsterConfig_default_instance_.Shutdown();
  delete monsterConfig_reflection_;
  monsterConfig_ConfigTypeGroupmonstertype_default_instance_.Shutdown();
  delete monsterConfig_ConfigTypeGroupmonstertype_reflection_;
}

void protobuf_InitDefaults_monsterConfig_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::Pro::protobuf_InitDefaults_roleConfig_2eproto();
  ::Pro::protobuf_InitDefaults_ConfigTypeGroup_2eproto();
  ::google::protobuf::internal::GetEmptyString();
  monsterConfig_default_instance_.DefaultConstruct();
  monsterConfig_ConfigTypeGroupmonstertype_default_instance_.DefaultConstruct();
  monsterConfig_default_instance_.get_mutable()->InitAsDefaultInstance();
  monsterConfig_ConfigTypeGroupmonstertype_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_monsterConfig_2eproto_once_);
void protobuf_InitDefaults_monsterConfig_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_monsterConfig_2eproto_once_,
                 &protobuf_InitDefaults_monsterConfig_2eproto_impl);
}
void protobuf_AddDesc_monsterConfig_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_monsterConfig_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\023monsterConfig.proto\022\003Pro\032\020roleConfig.p"
    "roto\032\025ConfigTypeGroup.proto\"\262\004\n\rmonsterC"
    "onfig\022\n\n\002id\030\001 \001(\t\022.\n\013group_float\030\002 \003(\0132\031"
    ".Pro.ConfigTypeGroupfloat\0220\n\014group_strin"
    "g\030\003 \003(\0132\032.Pro.ConfigTypeGroupstring\022$\n\003j"
    "ob\030\004 \001(\0162\027.Pro.roleConfig.jobtype\022\r\n\005lev"
    "el\030\005 \001(\005\022\013\n\003sub\030\006 \001(\005\022\036\n\002c1\030\007 \001(\0132\022.Pro."
    "ProCoordinate\022\036\n\002c2\030\010 \003(\0132\022.Pro.ProCoord"
    "inate\022-\n\002c3\030\t \003(\0132!.Pro.ConfigTypeGroupP"
    "roCoordinate\022\n\n\002c4\030\n \003(\005\022%\n\002c5\030\013 \003(\0132\031.P"
    "ro.ConfigTypeGroupint32\022\n\n\002c8\030\014 \003(\010\022\n\n\002c"
    "6\030\r \001(\010\022$\n\002c7\030\016 \003(\0132\030.Pro.ConfigTypeGrou"
    "pbool\032K\n\032ConfigTypeGroupmonstertype\022-\n\005a"
    "rray\030\001 \003(\0162\036.Pro.monsterConfig.monsterty"
    "pe\"D\n\013monstertype\022\020\n\014mini_monster\020\001\022\023\n\017m"
    "iddile_monster\020\002\022\016\n\nbig_monter\020\003", 632);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "monsterConfig.proto", &protobuf_RegisterTypes);
  ::Pro::protobuf_AddDesc_roleConfig_2eproto();
  ::Pro::protobuf_AddDesc_ConfigTypeGroup_2eproto();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_monsterConfig_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_monsterConfig_2eproto_once_);
void protobuf_AddDesc_monsterConfig_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_monsterConfig_2eproto_once_,
                 &protobuf_AddDesc_monsterConfig_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_monsterConfig_2eproto {
  StaticDescriptorInitializer_monsterConfig_2eproto() {
    protobuf_AddDesc_monsterConfig_2eproto();
  }
} static_descriptor_initializer_monsterConfig_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

const ::google::protobuf::EnumDescriptor* monsterConfig_monstertype_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return monsterConfig_monstertype_descriptor_;
}
bool monsterConfig_monstertype_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const monsterConfig_monstertype monsterConfig::mini_monster;
const monsterConfig_monstertype monsterConfig::middile_monster;
const monsterConfig_monstertype monsterConfig::big_monter;
const monsterConfig_monstertype monsterConfig::monstertype_MIN;
const monsterConfig_monstertype monsterConfig::monstertype_MAX;
const int monsterConfig::monstertype_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int monsterConfig_ConfigTypeGroupmonstertype::kArrayFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

monsterConfig_ConfigTypeGroupmonstertype::monsterConfig_ConfigTypeGroupmonstertype()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_monsterConfig_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pro.monsterConfig.ConfigTypeGroupmonstertype)
}

void monsterConfig_ConfigTypeGroupmonstertype::InitAsDefaultInstance() {
}

monsterConfig_ConfigTypeGroupmonstertype::monsterConfig_ConfigTypeGroupmonstertype(const monsterConfig_ConfigTypeGroupmonstertype& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Pro.monsterConfig.ConfigTypeGroupmonstertype)
}

void monsterConfig_ConfigTypeGroupmonstertype::SharedCtor() {
  _cached_size_ = 0;
}

monsterConfig_ConfigTypeGroupmonstertype::~monsterConfig_ConfigTypeGroupmonstertype() {
  // @@protoc_insertion_point(destructor:Pro.monsterConfig.ConfigTypeGroupmonstertype)
  SharedDtor();
}

void monsterConfig_ConfigTypeGroupmonstertype::SharedDtor() {
}

void monsterConfig_ConfigTypeGroupmonstertype::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* monsterConfig_ConfigTypeGroupmonstertype::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return monsterConfig_ConfigTypeGroupmonstertype_descriptor_;
}

const monsterConfig_ConfigTypeGroupmonstertype& monsterConfig_ConfigTypeGroupmonstertype::default_instance() {
  protobuf_InitDefaults_monsterConfig_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<monsterConfig_ConfigTypeGroupmonstertype> monsterConfig_ConfigTypeGroupmonstertype_default_instance_;

monsterConfig_ConfigTypeGroupmonstertype* monsterConfig_ConfigTypeGroupmonstertype::New(::google::protobuf::Arena* arena) const {
  monsterConfig_ConfigTypeGroupmonstertype* n = new monsterConfig_ConfigTypeGroupmonstertype;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void monsterConfig_ConfigTypeGroupmonstertype::Clear() {
// @@protoc_insertion_point(message_clear_start:Pro.monsterConfig.ConfigTypeGroupmonstertype)
  array_.Clear();
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool monsterConfig_ConfigTypeGroupmonstertype::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pro.monsterConfig.ConfigTypeGroupmonstertype)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Pro.monsterConfig.monstertype array = 1;
      case 1: {
        if (tag == 8) {
         parse_array:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::Pro::monsterConfig_monstertype_IsValid(value)) {
            add_array(static_cast< ::Pro::monsterConfig_monstertype >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormat::ReadPackedEnumPreserveUnknowns(
                 input,
                 1,
                 ::Pro::monsterConfig_monstertype_IsValid,
                 mutable_unknown_fields(),
                 this->mutable_array())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(8)) goto parse_array;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pro.monsterConfig.ConfigTypeGroupmonstertype)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pro.monsterConfig.ConfigTypeGroupmonstertype)
  return false;
#undef DO_
}

void monsterConfig_ConfigTypeGroupmonstertype::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pro.monsterConfig.ConfigTypeGroupmonstertype)
  // repeated .Pro.monsterConfig.monstertype array = 1;
  for (int i = 0; i < this->array_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->array(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Pro.monsterConfig.ConfigTypeGroupmonstertype)
}

::google::protobuf::uint8* monsterConfig_ConfigTypeGroupmonstertype::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Pro.monsterConfig.ConfigTypeGroupmonstertype)
  // repeated .Pro.monsterConfig.monstertype array = 1;
  for (int i = 0; i < this->array_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->array(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pro.monsterConfig.ConfigTypeGroupmonstertype)
  return target;
}

size_t monsterConfig_ConfigTypeGroupmonstertype::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Pro.monsterConfig.ConfigTypeGroupmonstertype)
  size_t total_size = 0;

  // repeated .Pro.monsterConfig.monstertype array = 1;
  {
    size_t data_size = 0;
    unsigned int count = this->array_size();for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->array(i));
    }
    total_size += (1UL * count) + data_size;
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void monsterConfig_ConfigTypeGroupmonstertype::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Pro.monsterConfig.ConfigTypeGroupmonstertype)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const monsterConfig_ConfigTypeGroupmonstertype* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const monsterConfig_ConfigTypeGroupmonstertype>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Pro.monsterConfig.ConfigTypeGroupmonstertype)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Pro.monsterConfig.ConfigTypeGroupmonstertype)
    UnsafeMergeFrom(*source);
  }
}

void monsterConfig_ConfigTypeGroupmonstertype::MergeFrom(const monsterConfig_ConfigTypeGroupmonstertype& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Pro.monsterConfig.ConfigTypeGroupmonstertype)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void monsterConfig_ConfigTypeGroupmonstertype::UnsafeMergeFrom(const monsterConfig_ConfigTypeGroupmonstertype& from) {
  GOOGLE_DCHECK(&from != this);
  array_.UnsafeMergeFrom(from.array_);
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void monsterConfig_ConfigTypeGroupmonstertype::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Pro.monsterConfig.ConfigTypeGroupmonstertype)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void monsterConfig_ConfigTypeGroupmonstertype::CopyFrom(const monsterConfig_ConfigTypeGroupmonstertype& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Pro.monsterConfig.ConfigTypeGroupmonstertype)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool monsterConfig_ConfigTypeGroupmonstertype::IsInitialized() const {

  return true;
}

void monsterConfig_ConfigTypeGroupmonstertype::Swap(monsterConfig_ConfigTypeGroupmonstertype* other) {
  if (other == this) return;
  InternalSwap(other);
}
void monsterConfig_ConfigTypeGroupmonstertype::InternalSwap(monsterConfig_ConfigTypeGroupmonstertype* other) {
  array_.UnsafeArenaSwap(&other->array_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata monsterConfig_ConfigTypeGroupmonstertype::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = monsterConfig_ConfigTypeGroupmonstertype_descriptor_;
  metadata.reflection = monsterConfig_ConfigTypeGroupmonstertype_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int monsterConfig::kIdFieldNumber;
const int monsterConfig::kGroupFloatFieldNumber;
const int monsterConfig::kGroupStringFieldNumber;
const int monsterConfig::kJobFieldNumber;
const int monsterConfig::kLevelFieldNumber;
const int monsterConfig::kSubFieldNumber;
const int monsterConfig::kC1FieldNumber;
const int monsterConfig::kC2FieldNumber;
const int monsterConfig::kC3FieldNumber;
const int monsterConfig::kC4FieldNumber;
const int monsterConfig::kC5FieldNumber;
const int monsterConfig::kC8FieldNumber;
const int monsterConfig::kC6FieldNumber;
const int monsterConfig::kC7FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

monsterConfig::monsterConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_monsterConfig_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pro.monsterConfig)
}

void monsterConfig::InitAsDefaultInstance() {
  c1_ = const_cast< ::Pro::ProCoordinate*>(
      ::Pro::ProCoordinate::internal_default_instance());
}

monsterConfig::monsterConfig(const monsterConfig& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Pro.monsterConfig)
}

void monsterConfig::SharedCtor() {
  _cached_size_ = 0;
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  c1_ = NULL;
  ::memset(&job_, 0, reinterpret_cast<char*>(&c6_) -
    reinterpret_cast<char*>(&job_) + sizeof(c6_));
}

monsterConfig::~monsterConfig() {
  // @@protoc_insertion_point(destructor:Pro.monsterConfig)
  SharedDtor();
}

void monsterConfig::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != &monsterConfig_default_instance_.get()) {
    delete c1_;
  }
}

void monsterConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* monsterConfig::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return monsterConfig_descriptor_;
}

const monsterConfig& monsterConfig::default_instance() {
  protobuf_InitDefaults_monsterConfig_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<monsterConfig> monsterConfig_default_instance_;

monsterConfig* monsterConfig::New(::google::protobuf::Arena* arena) const {
  monsterConfig* n = new monsterConfig;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void monsterConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:Pro.monsterConfig)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(monsterConfig, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<monsterConfig*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 121u) {
    ZR_(job_, sub_);
    if (has_id()) {
      id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_c1()) {
      if (c1_ != NULL) c1_->::Pro::ProCoordinate::Clear();
    }
  }
  c6_ = false;

#undef ZR_HELPER_
#undef ZR_

  group_float_.Clear();
  group_string_.Clear();
  c2_.Clear();
  c3_.Clear();
  c4_.Clear();
  c5_.Clear();
  c8_.Clear();
  c7_.Clear();
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool monsterConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pro.monsterConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Pro.monsterConfig.id");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_group_float;
        break;
      }

      // repeated .Pro.ConfigTypeGroupfloat group_float = 2;
      case 2: {
        if (tag == 18) {
         parse_group_float:
          DO_(input->IncrementRecursionDepth());
         parse_loop_group_float:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_group_float()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_group_float;
        if (input->ExpectTag(26)) goto parse_loop_group_string;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .Pro.ConfigTypeGroupstring group_string = 3;
      case 3: {
        if (tag == 26) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_group_string:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_group_string()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_group_string;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(32)) goto parse_job;
        break;
      }

      // optional .Pro.roleConfig.jobtype job = 4;
      case 4: {
        if (tag == 32) {
         parse_job:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::Pro::roleConfig_jobtype_IsValid(value)) {
            set_job(static_cast< ::Pro::roleConfig_jobtype >(value));
          } else {
            mutable_unknown_fields()->AddVarint(4, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_level;
        break;
      }

      // optional int32 level = 5;
      case 5: {
        if (tag == 40) {
         parse_level:
          set_has_level();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_sub;
        break;
      }

      // optional int32 sub = 6;
      case 6: {
        if (tag == 48) {
         parse_sub:
          set_has_sub();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sub_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_c1;
        break;
      }

      // optional .Pro.ProCoordinate c1 = 7;
      case 7: {
        if (tag == 58) {
         parse_c1:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_c1()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_c2;
        break;
      }

      // repeated .Pro.ProCoordinate c2 = 8;
      case 8: {
        if (tag == 66) {
         parse_c2:
          DO_(input->IncrementRecursionDepth());
         parse_loop_c2:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_c2()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_loop_c2;
        if (input->ExpectTag(74)) goto parse_loop_c3;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .Pro.ConfigTypeGroupProCoordinate c3 = 9;
      case 9: {
        if (tag == 74) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_c3:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_c3()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_loop_c3;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(80)) goto parse_c4;
        break;
      }

      // repeated int32 c4 = 10;
      case 10: {
        if (tag == 80) {
         parse_c4:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 80, input, this->mutable_c4())));
        } else if (tag == 82) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_c4())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_c4;
        if (input->ExpectTag(90)) goto parse_c5;
        break;
      }

      // repeated .Pro.ConfigTypeGroupint32 c5 = 11;
      case 11: {
        if (tag == 90) {
         parse_c5:
          DO_(input->IncrementRecursionDepth());
         parse_loop_c5:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_c5()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_loop_c5;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(96)) goto parse_c8;
        break;
      }

      // repeated bool c8 = 12;
      case 12: {
        if (tag == 96) {
         parse_c8:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 1, 96, input, this->mutable_c8())));
        } else if (tag == 98) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, this->mutable_c8())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(96)) goto parse_c8;
        if (input->ExpectTag(104)) goto parse_c6;
        break;
      }

      // optional bool c6 = 13;
      case 13: {
        if (tag == 104) {
         parse_c6:
          set_has_c6();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &c6_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(114)) goto parse_c7;
        break;
      }

      // repeated .Pro.ConfigTypeGroupbool c7 = 14;
      case 14: {
        if (tag == 114) {
         parse_c7:
          DO_(input->IncrementRecursionDepth());
         parse_loop_c7:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_c7()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(114)) goto parse_loop_c7;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pro.monsterConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pro.monsterConfig)
  return false;
#undef DO_
}

void monsterConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pro.monsterConfig)
  // optional string id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Pro.monsterConfig.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // repeated .Pro.ConfigTypeGroupfloat group_float = 2;
  for (unsigned int i = 0, n = this->group_float_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->group_float(i), output);
  }

  // repeated .Pro.ConfigTypeGroupstring group_string = 3;
  for (unsigned int i = 0, n = this->group_string_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->group_string(i), output);
  }

  // optional .Pro.roleConfig.jobtype job = 4;
  if (has_job()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->job(), output);
  }

  // optional int32 level = 5;
  if (has_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->level(), output);
  }

  // optional int32 sub = 6;
  if (has_sub()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->sub(), output);
  }

  // optional .Pro.ProCoordinate c1 = 7;
  if (has_c1()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->c1_, output);
  }

  // repeated .Pro.ProCoordinate c2 = 8;
  for (unsigned int i = 0, n = this->c2_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->c2(i), output);
  }

  // repeated .Pro.ConfigTypeGroupProCoordinate c3 = 9;
  for (unsigned int i = 0, n = this->c3_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->c3(i), output);
  }

  // repeated int32 c4 = 10;
  for (int i = 0; i < this->c4_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      10, this->c4(i), output);
  }

  // repeated .Pro.ConfigTypeGroupint32 c5 = 11;
  for (unsigned int i = 0, n = this->c5_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->c5(i), output);
  }

  // repeated bool c8 = 12;
  for (int i = 0; i < this->c8_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(
      12, this->c8(i), output);
  }

  // optional bool c6 = 13;
  if (has_c6()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(13, this->c6(), output);
  }

  // repeated .Pro.ConfigTypeGroupbool c7 = 14;
  for (unsigned int i = 0, n = this->c7_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, this->c7(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Pro.monsterConfig)
}

::google::protobuf::uint8* monsterConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Pro.monsterConfig)
  // optional string id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Pro.monsterConfig.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // repeated .Pro.ConfigTypeGroupfloat group_float = 2;
  for (unsigned int i = 0, n = this->group_float_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->group_float(i), false, target);
  }

  // repeated .Pro.ConfigTypeGroupstring group_string = 3;
  for (unsigned int i = 0, n = this->group_string_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->group_string(i), false, target);
  }

  // optional .Pro.roleConfig.jobtype job = 4;
  if (has_job()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->job(), target);
  }

  // optional int32 level = 5;
  if (has_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->level(), target);
  }

  // optional int32 sub = 6;
  if (has_sub()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->sub(), target);
  }

  // optional .Pro.ProCoordinate c1 = 7;
  if (has_c1()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, *this->c1_, false, target);
  }

  // repeated .Pro.ProCoordinate c2 = 8;
  for (unsigned int i = 0, n = this->c2_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, this->c2(i), false, target);
  }

  // repeated .Pro.ConfigTypeGroupProCoordinate c3 = 9;
  for (unsigned int i = 0, n = this->c3_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        9, this->c3(i), false, target);
  }

  // repeated int32 c4 = 10;
  for (int i = 0; i < this->c4_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(10, this->c4(i), target);
  }

  // repeated .Pro.ConfigTypeGroupint32 c5 = 11;
  for (unsigned int i = 0, n = this->c5_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        11, this->c5(i), false, target);
  }

  // repeated bool c8 = 12;
  for (int i = 0; i < this->c8_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBoolToArray(12, this->c8(i), target);
  }

  // optional bool c6 = 13;
  if (has_c6()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(13, this->c6(), target);
  }

  // repeated .Pro.ConfigTypeGroupbool c7 = 14;
  for (unsigned int i = 0, n = this->c7_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        14, this->c7(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pro.monsterConfig)
  return target;
}

size_t monsterConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Pro.monsterConfig)
  size_t total_size = 0;

  if (_has_bits_[0 / 32] & 121u) {
    // optional string id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->id());
    }

    // optional .Pro.roleConfig.jobtype job = 4;
    if (has_job()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->job());
    }

    // optional int32 level = 5;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->level());
    }

    // optional int32 sub = 6;
    if (has_sub()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->sub());
    }

    // optional .Pro.ProCoordinate c1 = 7;
    if (has_c1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->c1_);
    }

  }
  // optional bool c6 = 13;
  if (has_c6()) {
    total_size += 1 + 1;
  }

  // repeated .Pro.ConfigTypeGroupfloat group_float = 2;
  {
    unsigned int count = this->group_float_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->group_float(i));
    }
  }

  // repeated .Pro.ConfigTypeGroupstring group_string = 3;
  {
    unsigned int count = this->group_string_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->group_string(i));
    }
  }

  // repeated .Pro.ProCoordinate c2 = 8;
  {
    unsigned int count = this->c2_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->c2(i));
    }
  }

  // repeated .Pro.ConfigTypeGroupProCoordinate c3 = 9;
  {
    unsigned int count = this->c3_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->c3(i));
    }
  }

  // repeated int32 c4 = 10;
  {
    size_t data_size = 0;
    unsigned int count = this->c4_size();
    for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->c4(i));
    }
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->c4_size());
    total_size += data_size;
  }

  // repeated .Pro.ConfigTypeGroupint32 c5 = 11;
  {
    unsigned int count = this->c5_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->c5(i));
    }
  }

  // repeated bool c8 = 12;
  {
    size_t data_size = 0;
    unsigned int count = this->c8_size();
    data_size = 1UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->c8_size());
    total_size += data_size;
  }

  // repeated .Pro.ConfigTypeGroupbool c7 = 14;
  {
    unsigned int count = this->c7_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->c7(i));
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void monsterConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Pro.monsterConfig)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const monsterConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const monsterConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Pro.monsterConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Pro.monsterConfig)
    UnsafeMergeFrom(*source);
  }
}

void monsterConfig::MergeFrom(const monsterConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Pro.monsterConfig)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void monsterConfig::UnsafeMergeFrom(const monsterConfig& from) {
  GOOGLE_DCHECK(&from != this);
  group_float_.MergeFrom(from.group_float_);
  group_string_.MergeFrom(from.group_string_);
  c2_.MergeFrom(from.c2_);
  c3_.MergeFrom(from.c3_);
  c4_.UnsafeMergeFrom(from.c4_);
  c5_.MergeFrom(from.c5_);
  c8_.UnsafeMergeFrom(from.c8_);
  c7_.MergeFrom(from.c7_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_has_id();
      id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
    }
    if (from.has_job()) {
      set_job(from.job());
    }
    if (from.has_level()) {
      set_level(from.level());
    }
    if (from.has_sub()) {
      set_sub(from.sub());
    }
    if (from.has_c1()) {
      mutable_c1()->::Pro::ProCoordinate::MergeFrom(from.c1());
    }
  }
  if (from._has_bits_[12 / 32] & (0xffu << (12 % 32))) {
    if (from.has_c6()) {
      set_c6(from.c6());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void monsterConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Pro.monsterConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void monsterConfig::CopyFrom(const monsterConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Pro.monsterConfig)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool monsterConfig::IsInitialized() const {

  return true;
}

void monsterConfig::Swap(monsterConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void monsterConfig::InternalSwap(monsterConfig* other) {
  id_.Swap(&other->id_);
  group_float_.UnsafeArenaSwap(&other->group_float_);
  group_string_.UnsafeArenaSwap(&other->group_string_);
  std::swap(job_, other->job_);
  std::swap(level_, other->level_);
  std::swap(sub_, other->sub_);
  std::swap(c1_, other->c1_);
  c2_.UnsafeArenaSwap(&other->c2_);
  c3_.UnsafeArenaSwap(&other->c3_);
  c4_.UnsafeArenaSwap(&other->c4_);
  c5_.UnsafeArenaSwap(&other->c5_);
  c8_.UnsafeArenaSwap(&other->c8_);
  std::swap(c6_, other->c6_);
  c7_.UnsafeArenaSwap(&other->c7_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata monsterConfig::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = monsterConfig_descriptor_;
  metadata.reflection = monsterConfig_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// monsterConfig_ConfigTypeGroupmonstertype

// repeated .Pro.monsterConfig.monstertype array = 1;
int monsterConfig_ConfigTypeGroupmonstertype::array_size() const {
  return array_.size();
}
void monsterConfig_ConfigTypeGroupmonstertype::clear_array() {
  array_.Clear();
}
::Pro::monsterConfig_monstertype monsterConfig_ConfigTypeGroupmonstertype::array(int index) const {
  // @@protoc_insertion_point(field_get:Pro.monsterConfig.ConfigTypeGroupmonstertype.array)
  return static_cast< ::Pro::monsterConfig_monstertype >(array_.Get(index));
}
void monsterConfig_ConfigTypeGroupmonstertype::set_array(int index, ::Pro::monsterConfig_monstertype value) {
  assert(::Pro::monsterConfig_monstertype_IsValid(value));
  array_.Set(index, value);
  // @@protoc_insertion_point(field_set:Pro.monsterConfig.ConfigTypeGroupmonstertype.array)
}
void monsterConfig_ConfigTypeGroupmonstertype::add_array(::Pro::monsterConfig_monstertype value) {
  assert(::Pro::monsterConfig_monstertype_IsValid(value));
  array_.Add(value);
  // @@protoc_insertion_point(field_add:Pro.monsterConfig.ConfigTypeGroupmonstertype.array)
}
const ::google::protobuf::RepeatedField<int>&
monsterConfig_ConfigTypeGroupmonstertype::array() const {
  // @@protoc_insertion_point(field_list:Pro.monsterConfig.ConfigTypeGroupmonstertype.array)
  return array_;
}
::google::protobuf::RepeatedField<int>*
monsterConfig_ConfigTypeGroupmonstertype::mutable_array() {
  // @@protoc_insertion_point(field_mutable_list:Pro.monsterConfig.ConfigTypeGroupmonstertype.array)
  return &array_;
}

inline const monsterConfig_ConfigTypeGroupmonstertype* monsterConfig_ConfigTypeGroupmonstertype::internal_default_instance() {
  return &monsterConfig_ConfigTypeGroupmonstertype_default_instance_.get();
}
// -------------------------------------------------------------------

// monsterConfig

// optional string id = 1;
bool monsterConfig::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void monsterConfig::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
void monsterConfig::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void monsterConfig::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_id();
}
const ::std::string& monsterConfig::id() const {
  // @@protoc_insertion_point(field_get:Pro.monsterConfig.id)
  return id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void monsterConfig::set_id(const ::std::string& value) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Pro.monsterConfig.id)
}
void monsterConfig::set_id(const char* value) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Pro.monsterConfig.id)
}
void monsterConfig::set_id(const char* value, size_t size) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Pro.monsterConfig.id)
}
::std::string* monsterConfig::mutable_id() {
  set_has_id();
  // @@protoc_insertion_point(field_mutable:Pro.monsterConfig.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* monsterConfig::release_id() {
  // @@protoc_insertion_point(field_release:Pro.monsterConfig.id)
  clear_has_id();
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void monsterConfig::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    set_has_id();
  } else {
    clear_has_id();
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:Pro.monsterConfig.id)
}

// repeated .Pro.ConfigTypeGroupfloat group_float = 2;
int monsterConfig::group_float_size() const {
  return group_float_.size();
}
void monsterConfig::clear_group_float() {
  group_float_.Clear();
}
const ::Pro::ConfigTypeGroupfloat& monsterConfig::group_float(int index) const {
  // @@protoc_insertion_point(field_get:Pro.monsterConfig.group_float)
  return group_float_.Get(index);
}
::Pro::ConfigTypeGroupfloat* monsterConfig::mutable_group_float(int index) {
  // @@protoc_insertion_point(field_mutable:Pro.monsterConfig.group_float)
  return group_float_.Mutable(index);
}
::Pro::ConfigTypeGroupfloat* monsterConfig::add_group_float() {
  // @@protoc_insertion_point(field_add:Pro.monsterConfig.group_float)
  return group_float_.Add();
}
::google::protobuf::RepeatedPtrField< ::Pro::ConfigTypeGroupfloat >*
monsterConfig::mutable_group_float() {
  // @@protoc_insertion_point(field_mutable_list:Pro.monsterConfig.group_float)
  return &group_float_;
}
const ::google::protobuf::RepeatedPtrField< ::Pro::ConfigTypeGroupfloat >&
monsterConfig::group_float() const {
  // @@protoc_insertion_point(field_list:Pro.monsterConfig.group_float)
  return group_float_;
}

// repeated .Pro.ConfigTypeGroupstring group_string = 3;
int monsterConfig::group_string_size() const {
  return group_string_.size();
}
void monsterConfig::clear_group_string() {
  group_string_.Clear();
}
const ::Pro::ConfigTypeGroupstring& monsterConfig::group_string(int index) const {
  // @@protoc_insertion_point(field_get:Pro.monsterConfig.group_string)
  return group_string_.Get(index);
}
::Pro::ConfigTypeGroupstring* monsterConfig::mutable_group_string(int index) {
  // @@protoc_insertion_point(field_mutable:Pro.monsterConfig.group_string)
  return group_string_.Mutable(index);
}
::Pro::ConfigTypeGroupstring* monsterConfig::add_group_string() {
  // @@protoc_insertion_point(field_add:Pro.monsterConfig.group_string)
  return group_string_.Add();
}
::google::protobuf::RepeatedPtrField< ::Pro::ConfigTypeGroupstring >*
monsterConfig::mutable_group_string() {
  // @@protoc_insertion_point(field_mutable_list:Pro.monsterConfig.group_string)
  return &group_string_;
}
const ::google::protobuf::RepeatedPtrField< ::Pro::ConfigTypeGroupstring >&
monsterConfig::group_string() const {
  // @@protoc_insertion_point(field_list:Pro.monsterConfig.group_string)
  return group_string_;
}

// optional .Pro.roleConfig.jobtype job = 4;
bool monsterConfig::has_job() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void monsterConfig::set_has_job() {
  _has_bits_[0] |= 0x00000008u;
}
void monsterConfig::clear_has_job() {
  _has_bits_[0] &= ~0x00000008u;
}
void monsterConfig::clear_job() {
  job_ = 0;
  clear_has_job();
}
::Pro::roleConfig_jobtype monsterConfig::job() const {
  // @@protoc_insertion_point(field_get:Pro.monsterConfig.job)
  return static_cast< ::Pro::roleConfig_jobtype >(job_);
}
void monsterConfig::set_job(::Pro::roleConfig_jobtype value) {
  assert(::Pro::roleConfig_jobtype_IsValid(value));
  set_has_job();
  job_ = value;
  // @@protoc_insertion_point(field_set:Pro.monsterConfig.job)
}

// optional int32 level = 5;
bool monsterConfig::has_level() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void monsterConfig::set_has_level() {
  _has_bits_[0] |= 0x00000010u;
}
void monsterConfig::clear_has_level() {
  _has_bits_[0] &= ~0x00000010u;
}
void monsterConfig::clear_level() {
  level_ = 0;
  clear_has_level();
}
::google::protobuf::int32 monsterConfig::level() const {
  // @@protoc_insertion_point(field_get:Pro.monsterConfig.level)
  return level_;
}
void monsterConfig::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:Pro.monsterConfig.level)
}

// optional int32 sub = 6;
bool monsterConfig::has_sub() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void monsterConfig::set_has_sub() {
  _has_bits_[0] |= 0x00000020u;
}
void monsterConfig::clear_has_sub() {
  _has_bits_[0] &= ~0x00000020u;
}
void monsterConfig::clear_sub() {
  sub_ = 0;
  clear_has_sub();
}
::google::protobuf::int32 monsterConfig::sub() const {
  // @@protoc_insertion_point(field_get:Pro.monsterConfig.sub)
  return sub_;
}
void monsterConfig::set_sub(::google::protobuf::int32 value) {
  set_has_sub();
  sub_ = value;
  // @@protoc_insertion_point(field_set:Pro.monsterConfig.sub)
}

// optional .Pro.ProCoordinate c1 = 7;
bool monsterConfig::has_c1() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void monsterConfig::set_has_c1() {
  _has_bits_[0] |= 0x00000040u;
}
void monsterConfig::clear_has_c1() {
  _has_bits_[0] &= ~0x00000040u;
}
void monsterConfig::clear_c1() {
  if (c1_ != NULL) c1_->::Pro::ProCoordinate::Clear();
  clear_has_c1();
}
const ::Pro::ProCoordinate& monsterConfig::c1() const {
  // @@protoc_insertion_point(field_get:Pro.monsterConfig.c1)
  return c1_ != NULL ? *c1_
                         : *::Pro::ProCoordinate::internal_default_instance();
}
::Pro::ProCoordinate* monsterConfig::mutable_c1() {
  set_has_c1();
  if (c1_ == NULL) {
    c1_ = new ::Pro::ProCoordinate;
  }
  // @@protoc_insertion_point(field_mutable:Pro.monsterConfig.c1)
  return c1_;
}
::Pro::ProCoordinate* monsterConfig::release_c1() {
  // @@protoc_insertion_point(field_release:Pro.monsterConfig.c1)
  clear_has_c1();
  ::Pro::ProCoordinate* temp = c1_;
  c1_ = NULL;
  return temp;
}
void monsterConfig::set_allocated_c1(::Pro::ProCoordinate* c1) {
  delete c1_;
  c1_ = c1;
  if (c1) {
    set_has_c1();
  } else {
    clear_has_c1();
  }
  // @@protoc_insertion_point(field_set_allocated:Pro.monsterConfig.c1)
}

// repeated .Pro.ProCoordinate c2 = 8;
int monsterConfig::c2_size() const {
  return c2_.size();
}
void monsterConfig::clear_c2() {
  c2_.Clear();
}
const ::Pro::ProCoordinate& monsterConfig::c2(int index) const {
  // @@protoc_insertion_point(field_get:Pro.monsterConfig.c2)
  return c2_.Get(index);
}
::Pro::ProCoordinate* monsterConfig::mutable_c2(int index) {
  // @@protoc_insertion_point(field_mutable:Pro.monsterConfig.c2)
  return c2_.Mutable(index);
}
::Pro::ProCoordinate* monsterConfig::add_c2() {
  // @@protoc_insertion_point(field_add:Pro.monsterConfig.c2)
  return c2_.Add();
}
::google::protobuf::RepeatedPtrField< ::Pro::ProCoordinate >*
monsterConfig::mutable_c2() {
  // @@protoc_insertion_point(field_mutable_list:Pro.monsterConfig.c2)
  return &c2_;
}
const ::google::protobuf::RepeatedPtrField< ::Pro::ProCoordinate >&
monsterConfig::c2() const {
  // @@protoc_insertion_point(field_list:Pro.monsterConfig.c2)
  return c2_;
}

// repeated .Pro.ConfigTypeGroupProCoordinate c3 = 9;
int monsterConfig::c3_size() const {
  return c3_.size();
}
void monsterConfig::clear_c3() {
  c3_.Clear();
}
const ::Pro::ConfigTypeGroupProCoordinate& monsterConfig::c3(int index) const {
  // @@protoc_insertion_point(field_get:Pro.monsterConfig.c3)
  return c3_.Get(index);
}
::Pro::ConfigTypeGroupProCoordinate* monsterConfig::mutable_c3(int index) {
  // @@protoc_insertion_point(field_mutable:Pro.monsterConfig.c3)
  return c3_.Mutable(index);
}
::Pro::ConfigTypeGroupProCoordinate* monsterConfig::add_c3() {
  // @@protoc_insertion_point(field_add:Pro.monsterConfig.c3)
  return c3_.Add();
}
::google::protobuf::RepeatedPtrField< ::Pro::ConfigTypeGroupProCoordinate >*
monsterConfig::mutable_c3() {
  // @@protoc_insertion_point(field_mutable_list:Pro.monsterConfig.c3)
  return &c3_;
}
const ::google::protobuf::RepeatedPtrField< ::Pro::ConfigTypeGroupProCoordinate >&
monsterConfig::c3() const {
  // @@protoc_insertion_point(field_list:Pro.monsterConfig.c3)
  return c3_;
}

// repeated int32 c4 = 10;
int monsterConfig::c4_size() const {
  return c4_.size();
}
void monsterConfig::clear_c4() {
  c4_.Clear();
}
::google::protobuf::int32 monsterConfig::c4(int index) const {
  // @@protoc_insertion_point(field_get:Pro.monsterConfig.c4)
  return c4_.Get(index);
}
void monsterConfig::set_c4(int index, ::google::protobuf::int32 value) {
  c4_.Set(index, value);
  // @@protoc_insertion_point(field_set:Pro.monsterConfig.c4)
}
void monsterConfig::add_c4(::google::protobuf::int32 value) {
  c4_.Add(value);
  // @@protoc_insertion_point(field_add:Pro.monsterConfig.c4)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
monsterConfig::c4() const {
  // @@protoc_insertion_point(field_list:Pro.monsterConfig.c4)
  return c4_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
monsterConfig::mutable_c4() {
  // @@protoc_insertion_point(field_mutable_list:Pro.monsterConfig.c4)
  return &c4_;
}

// repeated .Pro.ConfigTypeGroupint32 c5 = 11;
int monsterConfig::c5_size() const {
  return c5_.size();
}
void monsterConfig::clear_c5() {
  c5_.Clear();
}
const ::Pro::ConfigTypeGroupint32& monsterConfig::c5(int index) const {
  // @@protoc_insertion_point(field_get:Pro.monsterConfig.c5)
  return c5_.Get(index);
}
::Pro::ConfigTypeGroupint32* monsterConfig::mutable_c5(int index) {
  // @@protoc_insertion_point(field_mutable:Pro.monsterConfig.c5)
  return c5_.Mutable(index);
}
::Pro::ConfigTypeGroupint32* monsterConfig::add_c5() {
  // @@protoc_insertion_point(field_add:Pro.monsterConfig.c5)
  return c5_.Add();
}
::google::protobuf::RepeatedPtrField< ::Pro::ConfigTypeGroupint32 >*
monsterConfig::mutable_c5() {
  // @@protoc_insertion_point(field_mutable_list:Pro.monsterConfig.c5)
  return &c5_;
}
const ::google::protobuf::RepeatedPtrField< ::Pro::ConfigTypeGroupint32 >&
monsterConfig::c5() const {
  // @@protoc_insertion_point(field_list:Pro.monsterConfig.c5)
  return c5_;
}

// repeated bool c8 = 12;
int monsterConfig::c8_size() const {
  return c8_.size();
}
void monsterConfig::clear_c8() {
  c8_.Clear();
}
bool monsterConfig::c8(int index) const {
  // @@protoc_insertion_point(field_get:Pro.monsterConfig.c8)
  return c8_.Get(index);
}
void monsterConfig::set_c8(int index, bool value) {
  c8_.Set(index, value);
  // @@protoc_insertion_point(field_set:Pro.monsterConfig.c8)
}
void monsterConfig::add_c8(bool value) {
  c8_.Add(value);
  // @@protoc_insertion_point(field_add:Pro.monsterConfig.c8)
}
const ::google::protobuf::RepeatedField< bool >&
monsterConfig::c8() const {
  // @@protoc_insertion_point(field_list:Pro.monsterConfig.c8)
  return c8_;
}
::google::protobuf::RepeatedField< bool >*
monsterConfig::mutable_c8() {
  // @@protoc_insertion_point(field_mutable_list:Pro.monsterConfig.c8)
  return &c8_;
}

// optional bool c6 = 13;
bool monsterConfig::has_c6() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
void monsterConfig::set_has_c6() {
  _has_bits_[0] |= 0x00001000u;
}
void monsterConfig::clear_has_c6() {
  _has_bits_[0] &= ~0x00001000u;
}
void monsterConfig::clear_c6() {
  c6_ = false;
  clear_has_c6();
}
bool monsterConfig::c6() const {
  // @@protoc_insertion_point(field_get:Pro.monsterConfig.c6)
  return c6_;
}
void monsterConfig::set_c6(bool value) {
  set_has_c6();
  c6_ = value;
  // @@protoc_insertion_point(field_set:Pro.monsterConfig.c6)
}

// repeated .Pro.ConfigTypeGroupbool c7 = 14;
int monsterConfig::c7_size() const {
  return c7_.size();
}
void monsterConfig::clear_c7() {
  c7_.Clear();
}
const ::Pro::ConfigTypeGroupbool& monsterConfig::c7(int index) const {
  // @@protoc_insertion_point(field_get:Pro.monsterConfig.c7)
  return c7_.Get(index);
}
::Pro::ConfigTypeGroupbool* monsterConfig::mutable_c7(int index) {
  // @@protoc_insertion_point(field_mutable:Pro.monsterConfig.c7)
  return c7_.Mutable(index);
}
::Pro::ConfigTypeGroupbool* monsterConfig::add_c7() {
  // @@protoc_insertion_point(field_add:Pro.monsterConfig.c7)
  return c7_.Add();
}
::google::protobuf::RepeatedPtrField< ::Pro::ConfigTypeGroupbool >*
monsterConfig::mutable_c7() {
  // @@protoc_insertion_point(field_mutable_list:Pro.monsterConfig.c7)
  return &c7_;
}
const ::google::protobuf::RepeatedPtrField< ::Pro::ConfigTypeGroupbool >&
monsterConfig::c7() const {
  // @@protoc_insertion_point(field_list:Pro.monsterConfig.c7)
  return c7_;
}

inline const monsterConfig* monsterConfig::internal_default_instance() {
  return &monsterConfig_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace Pro

// @@protoc_insertion_point(global_scope)
