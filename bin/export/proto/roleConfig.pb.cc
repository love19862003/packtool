// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: roleConfig.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "roleConfig.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace Pro {

namespace {

const ::google::protobuf::Descriptor* roleConfig_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  roleConfig_reflection_ = NULL;
const ::google::protobuf::Descriptor* roleConfig_ConfigTypeGroupjobtype_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  roleConfig_ConfigTypeGroupjobtype_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* roleConfig_jobtype_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_roleConfig_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_roleConfig_2eproto() {
  protobuf_AddDesc_roleConfig_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "roleConfig.proto");
  GOOGLE_CHECK(file != NULL);
  roleConfig_descriptor_ = file->message_type(0);
  static const int roleConfig_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(roleConfig, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(roleConfig, group_float_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(roleConfig, group_string_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(roleConfig, camp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(roleConfig, camp_array_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(roleConfig, camp_group_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(roleConfig, job_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(roleConfig, job2_),
  };
  roleConfig_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      roleConfig_descriptor_,
      roleConfig::internal_default_instance(),
      roleConfig_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(roleConfig, _has_bits_),
      -1,
      -1,
      sizeof(roleConfig),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(roleConfig, _internal_metadata_));
  roleConfig_ConfigTypeGroupjobtype_descriptor_ = roleConfig_descriptor_->nested_type(0);
  static const int roleConfig_ConfigTypeGroupjobtype_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(roleConfig_ConfigTypeGroupjobtype, array_),
  };
  roleConfig_ConfigTypeGroupjobtype_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      roleConfig_ConfigTypeGroupjobtype_descriptor_,
      roleConfig_ConfigTypeGroupjobtype::internal_default_instance(),
      roleConfig_ConfigTypeGroupjobtype_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(roleConfig_ConfigTypeGroupjobtype, _has_bits_),
      -1,
      -1,
      sizeof(roleConfig_ConfigTypeGroupjobtype),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(roleConfig_ConfigTypeGroupjobtype, _internal_metadata_));
  roleConfig_jobtype_descriptor_ = roleConfig_descriptor_->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_roleConfig_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      roleConfig_descriptor_, roleConfig::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      roleConfig_ConfigTypeGroupjobtype_descriptor_, roleConfig_ConfigTypeGroupjobtype::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_roleConfig_2eproto() {
  roleConfig_default_instance_.Shutdown();
  delete roleConfig_reflection_;
  roleConfig_ConfigTypeGroupjobtype_default_instance_.Shutdown();
  delete roleConfig_ConfigTypeGroupjobtype_reflection_;
}

void protobuf_InitDefaults_roleConfig_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::Pro::protobuf_InitDefaults_EnumDefineConfig_2eproto();
  ::Pro::protobuf_InitDefaults_ConfigTypeGroup_2eproto();
  ::google::protobuf::internal::GetEmptyString();
  roleConfig_default_instance_.DefaultConstruct();
  roleConfig_ConfigTypeGroupjobtype_default_instance_.DefaultConstruct();
  roleConfig_default_instance_.get_mutable()->InitAsDefaultInstance();
  roleConfig_ConfigTypeGroupjobtype_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_roleConfig_2eproto_once_);
void protobuf_InitDefaults_roleConfig_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_roleConfig_2eproto_once_,
                 &protobuf_InitDefaults_roleConfig_2eproto_impl);
}
void protobuf_AddDesc_roleConfig_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_roleConfig_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\020roleConfig.proto\022\003Pro\032\026EnumDefineConfi"
    "g.proto\032\025ConfigTypeGroup.proto\"\215\004\n\nroleC"
    "onfig\022\n\n\002id\030\001 \001(\t\022.\n\013group_float\030\002 \003(\0132\031"
    ".Pro.ConfigTypeGroupfloat\0220\n\014group_strin"
    "g\030\003 \003(\0132\032.Pro.ConfigTypeGroupstring\022\033\n\004c"
    "amp\030\004 \001(\0162\r.Pro.camptype\022!\n\ncamp_array\030\005"
    " \003(\0162\r.Pro.camptype\0220\n\ncamp_group\030\006 \003(\0132"
    "\034.Pro.ConfigTypeGroupcamptype\022$\n\003job\030\007 \003"
    "(\0162\027.Pro.roleConfig.jobtype\0224\n\004job2\030\010 \003("
    "\0132&.Pro.roleConfig.ConfigTypeGroupjobtyp"
    "e\032@\n\026ConfigTypeGroupjobtype\022&\n\005array\030\001 \003"
    "(\0162\027.Pro.roleConfig.jobtype\"\200\001\n\007jobtype\022"
    "\014\n\010common_0\020\000\022\014\n\010novice_1\020\001\022\016\n\nswordman_"
    "2\020\002\022\021\n\rbusinessman_3\020\003\022\014\n\010archer_4\020\004\022\014\n\010"
    "master_5\020\005\022\013\n\007serve_6\020\006\022\r\n\trobbers_7\020\007", 598);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "roleConfig.proto", &protobuf_RegisterTypes);
  ::Pro::protobuf_AddDesc_EnumDefineConfig_2eproto();
  ::Pro::protobuf_AddDesc_ConfigTypeGroup_2eproto();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_roleConfig_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_roleConfig_2eproto_once_);
void protobuf_AddDesc_roleConfig_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_roleConfig_2eproto_once_,
                 &protobuf_AddDesc_roleConfig_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_roleConfig_2eproto {
  StaticDescriptorInitializer_roleConfig_2eproto() {
    protobuf_AddDesc_roleConfig_2eproto();
  }
} static_descriptor_initializer_roleConfig_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

const ::google::protobuf::EnumDescriptor* roleConfig_jobtype_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return roleConfig_jobtype_descriptor_;
}
bool roleConfig_jobtype_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const roleConfig_jobtype roleConfig::common_0;
const roleConfig_jobtype roleConfig::novice_1;
const roleConfig_jobtype roleConfig::swordman_2;
const roleConfig_jobtype roleConfig::businessman_3;
const roleConfig_jobtype roleConfig::archer_4;
const roleConfig_jobtype roleConfig::master_5;
const roleConfig_jobtype roleConfig::serve_6;
const roleConfig_jobtype roleConfig::robbers_7;
const roleConfig_jobtype roleConfig::jobtype_MIN;
const roleConfig_jobtype roleConfig::jobtype_MAX;
const int roleConfig::jobtype_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int roleConfig_ConfigTypeGroupjobtype::kArrayFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

roleConfig_ConfigTypeGroupjobtype::roleConfig_ConfigTypeGroupjobtype()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_roleConfig_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pro.roleConfig.ConfigTypeGroupjobtype)
}

void roleConfig_ConfigTypeGroupjobtype::InitAsDefaultInstance() {
}

roleConfig_ConfigTypeGroupjobtype::roleConfig_ConfigTypeGroupjobtype(const roleConfig_ConfigTypeGroupjobtype& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Pro.roleConfig.ConfigTypeGroupjobtype)
}

void roleConfig_ConfigTypeGroupjobtype::SharedCtor() {
  _cached_size_ = 0;
}

roleConfig_ConfigTypeGroupjobtype::~roleConfig_ConfigTypeGroupjobtype() {
  // @@protoc_insertion_point(destructor:Pro.roleConfig.ConfigTypeGroupjobtype)
  SharedDtor();
}

void roleConfig_ConfigTypeGroupjobtype::SharedDtor() {
}

void roleConfig_ConfigTypeGroupjobtype::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* roleConfig_ConfigTypeGroupjobtype::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return roleConfig_ConfigTypeGroupjobtype_descriptor_;
}

const roleConfig_ConfigTypeGroupjobtype& roleConfig_ConfigTypeGroupjobtype::default_instance() {
  protobuf_InitDefaults_roleConfig_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<roleConfig_ConfigTypeGroupjobtype> roleConfig_ConfigTypeGroupjobtype_default_instance_;

roleConfig_ConfigTypeGroupjobtype* roleConfig_ConfigTypeGroupjobtype::New(::google::protobuf::Arena* arena) const {
  roleConfig_ConfigTypeGroupjobtype* n = new roleConfig_ConfigTypeGroupjobtype;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void roleConfig_ConfigTypeGroupjobtype::Clear() {
// @@protoc_insertion_point(message_clear_start:Pro.roleConfig.ConfigTypeGroupjobtype)
  array_.Clear();
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool roleConfig_ConfigTypeGroupjobtype::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pro.roleConfig.ConfigTypeGroupjobtype)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Pro.roleConfig.jobtype array = 1;
      case 1: {
        if (tag == 8) {
         parse_array:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::Pro::roleConfig_jobtype_IsValid(value)) {
            add_array(static_cast< ::Pro::roleConfig_jobtype >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormat::ReadPackedEnumPreserveUnknowns(
                 input,
                 1,
                 ::Pro::roleConfig_jobtype_IsValid,
                 mutable_unknown_fields(),
                 this->mutable_array())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(8)) goto parse_array;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pro.roleConfig.ConfigTypeGroupjobtype)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pro.roleConfig.ConfigTypeGroupjobtype)
  return false;
#undef DO_
}

void roleConfig_ConfigTypeGroupjobtype::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pro.roleConfig.ConfigTypeGroupjobtype)
  // repeated .Pro.roleConfig.jobtype array = 1;
  for (int i = 0; i < this->array_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->array(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Pro.roleConfig.ConfigTypeGroupjobtype)
}

::google::protobuf::uint8* roleConfig_ConfigTypeGroupjobtype::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Pro.roleConfig.ConfigTypeGroupjobtype)
  // repeated .Pro.roleConfig.jobtype array = 1;
  for (int i = 0; i < this->array_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->array(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pro.roleConfig.ConfigTypeGroupjobtype)
  return target;
}

size_t roleConfig_ConfigTypeGroupjobtype::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Pro.roleConfig.ConfigTypeGroupjobtype)
  size_t total_size = 0;

  // repeated .Pro.roleConfig.jobtype array = 1;
  {
    size_t data_size = 0;
    unsigned int count = this->array_size();for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->array(i));
    }
    total_size += (1UL * count) + data_size;
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void roleConfig_ConfigTypeGroupjobtype::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Pro.roleConfig.ConfigTypeGroupjobtype)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const roleConfig_ConfigTypeGroupjobtype* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const roleConfig_ConfigTypeGroupjobtype>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Pro.roleConfig.ConfigTypeGroupjobtype)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Pro.roleConfig.ConfigTypeGroupjobtype)
    UnsafeMergeFrom(*source);
  }
}

void roleConfig_ConfigTypeGroupjobtype::MergeFrom(const roleConfig_ConfigTypeGroupjobtype& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Pro.roleConfig.ConfigTypeGroupjobtype)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void roleConfig_ConfigTypeGroupjobtype::UnsafeMergeFrom(const roleConfig_ConfigTypeGroupjobtype& from) {
  GOOGLE_DCHECK(&from != this);
  array_.UnsafeMergeFrom(from.array_);
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void roleConfig_ConfigTypeGroupjobtype::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Pro.roleConfig.ConfigTypeGroupjobtype)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void roleConfig_ConfigTypeGroupjobtype::CopyFrom(const roleConfig_ConfigTypeGroupjobtype& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Pro.roleConfig.ConfigTypeGroupjobtype)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool roleConfig_ConfigTypeGroupjobtype::IsInitialized() const {

  return true;
}

void roleConfig_ConfigTypeGroupjobtype::Swap(roleConfig_ConfigTypeGroupjobtype* other) {
  if (other == this) return;
  InternalSwap(other);
}
void roleConfig_ConfigTypeGroupjobtype::InternalSwap(roleConfig_ConfigTypeGroupjobtype* other) {
  array_.UnsafeArenaSwap(&other->array_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata roleConfig_ConfigTypeGroupjobtype::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = roleConfig_ConfigTypeGroupjobtype_descriptor_;
  metadata.reflection = roleConfig_ConfigTypeGroupjobtype_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int roleConfig::kIdFieldNumber;
const int roleConfig::kGroupFloatFieldNumber;
const int roleConfig::kGroupStringFieldNumber;
const int roleConfig::kCampFieldNumber;
const int roleConfig::kCampArrayFieldNumber;
const int roleConfig::kCampGroupFieldNumber;
const int roleConfig::kJobFieldNumber;
const int roleConfig::kJob2FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

roleConfig::roleConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_roleConfig_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pro.roleConfig)
}

void roleConfig::InitAsDefaultInstance() {
}

roleConfig::roleConfig(const roleConfig& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Pro.roleConfig)
}

void roleConfig::SharedCtor() {
  _cached_size_ = 0;
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  camp_ = 1;
}

roleConfig::~roleConfig() {
  // @@protoc_insertion_point(destructor:Pro.roleConfig)
  SharedDtor();
}

void roleConfig::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void roleConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* roleConfig::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return roleConfig_descriptor_;
}

const roleConfig& roleConfig::default_instance() {
  protobuf_InitDefaults_roleConfig_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<roleConfig> roleConfig_default_instance_;

roleConfig* roleConfig::New(::google::protobuf::Arena* arena) const {
  roleConfig* n = new roleConfig;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void roleConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:Pro.roleConfig)
  if (_has_bits_[0 / 32] & 9u) {
    if (has_id()) {
      id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    camp_ = 1;
  }
  group_float_.Clear();
  group_string_.Clear();
  camp_array_.Clear();
  camp_group_.Clear();
  job_.Clear();
  job2_.Clear();
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool roleConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pro.roleConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Pro.roleConfig.id");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_group_float;
        break;
      }

      // repeated .Pro.ConfigTypeGroupfloat group_float = 2;
      case 2: {
        if (tag == 18) {
         parse_group_float:
          DO_(input->IncrementRecursionDepth());
         parse_loop_group_float:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_group_float()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_group_float;
        if (input->ExpectTag(26)) goto parse_loop_group_string;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .Pro.ConfigTypeGroupstring group_string = 3;
      case 3: {
        if (tag == 26) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_group_string:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_group_string()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_group_string;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(32)) goto parse_camp;
        break;
      }

      // optional .Pro.camptype camp = 4;
      case 4: {
        if (tag == 32) {
         parse_camp:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::Pro::camptype_IsValid(value)) {
            set_camp(static_cast< ::Pro::camptype >(value));
          } else {
            mutable_unknown_fields()->AddVarint(4, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_camp_array;
        break;
      }

      // repeated .Pro.camptype camp_array = 5;
      case 5: {
        if (tag == 40) {
         parse_camp_array:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::Pro::camptype_IsValid(value)) {
            add_camp_array(static_cast< ::Pro::camptype >(value));
          } else {
            mutable_unknown_fields()->AddVarint(5, value);
          }
        } else if (tag == 42) {
          DO_((::google::protobuf::internal::WireFormat::ReadPackedEnumPreserveUnknowns(
                 input,
                 5,
                 ::Pro::camptype_IsValid,
                 mutable_unknown_fields(),
                 this->mutable_camp_array())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_camp_array;
        if (input->ExpectTag(50)) goto parse_camp_group;
        break;
      }

      // repeated .Pro.ConfigTypeGroupcamptype camp_group = 6;
      case 6: {
        if (tag == 50) {
         parse_camp_group:
          DO_(input->IncrementRecursionDepth());
         parse_loop_camp_group:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_camp_group()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_loop_camp_group;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(56)) goto parse_job;
        break;
      }

      // repeated .Pro.roleConfig.jobtype job = 7;
      case 7: {
        if (tag == 56) {
         parse_job:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::Pro::roleConfig_jobtype_IsValid(value)) {
            add_job(static_cast< ::Pro::roleConfig_jobtype >(value));
          } else {
            mutable_unknown_fields()->AddVarint(7, value);
          }
        } else if (tag == 58) {
          DO_((::google::protobuf::internal::WireFormat::ReadPackedEnumPreserveUnknowns(
                 input,
                 7,
                 ::Pro::roleConfig_jobtype_IsValid,
                 mutable_unknown_fields(),
                 this->mutable_job())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_job;
        if (input->ExpectTag(66)) goto parse_job2;
        break;
      }

      // repeated .Pro.roleConfig.ConfigTypeGroupjobtype job2 = 8;
      case 8: {
        if (tag == 66) {
         parse_job2:
          DO_(input->IncrementRecursionDepth());
         parse_loop_job2:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_job2()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_loop_job2;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pro.roleConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pro.roleConfig)
  return false;
#undef DO_
}

void roleConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pro.roleConfig)
  // optional string id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Pro.roleConfig.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // repeated .Pro.ConfigTypeGroupfloat group_float = 2;
  for (unsigned int i = 0, n = this->group_float_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->group_float(i), output);
  }

  // repeated .Pro.ConfigTypeGroupstring group_string = 3;
  for (unsigned int i = 0, n = this->group_string_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->group_string(i), output);
  }

  // optional .Pro.camptype camp = 4;
  if (has_camp()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->camp(), output);
  }

  // repeated .Pro.camptype camp_array = 5;
  for (int i = 0; i < this->camp_array_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->camp_array(i), output);
  }

  // repeated .Pro.ConfigTypeGroupcamptype camp_group = 6;
  for (unsigned int i = 0, n = this->camp_group_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->camp_group(i), output);
  }

  // repeated .Pro.roleConfig.jobtype job = 7;
  for (int i = 0; i < this->job_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->job(i), output);
  }

  // repeated .Pro.roleConfig.ConfigTypeGroupjobtype job2 = 8;
  for (unsigned int i = 0, n = this->job2_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->job2(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Pro.roleConfig)
}

::google::protobuf::uint8* roleConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Pro.roleConfig)
  // optional string id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Pro.roleConfig.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // repeated .Pro.ConfigTypeGroupfloat group_float = 2;
  for (unsigned int i = 0, n = this->group_float_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->group_float(i), false, target);
  }

  // repeated .Pro.ConfigTypeGroupstring group_string = 3;
  for (unsigned int i = 0, n = this->group_string_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->group_string(i), false, target);
  }

  // optional .Pro.camptype camp = 4;
  if (has_camp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->camp(), target);
  }

  // repeated .Pro.camptype camp_array = 5;
  for (int i = 0; i < this->camp_array_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->camp_array(i), target);
  }

  // repeated .Pro.ConfigTypeGroupcamptype camp_group = 6;
  for (unsigned int i = 0, n = this->camp_group_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, this->camp_group(i), false, target);
  }

  // repeated .Pro.roleConfig.jobtype job = 7;
  for (int i = 0; i < this->job_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->job(i), target);
  }

  // repeated .Pro.roleConfig.ConfigTypeGroupjobtype job2 = 8;
  for (unsigned int i = 0, n = this->job2_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, this->job2(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pro.roleConfig)
  return target;
}

size_t roleConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Pro.roleConfig)
  size_t total_size = 0;

  if (_has_bits_[0 / 32] & 9u) {
    // optional string id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->id());
    }

    // optional .Pro.camptype camp = 4;
    if (has_camp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->camp());
    }

  }
  // repeated .Pro.ConfigTypeGroupfloat group_float = 2;
  {
    unsigned int count = this->group_float_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->group_float(i));
    }
  }

  // repeated .Pro.ConfigTypeGroupstring group_string = 3;
  {
    unsigned int count = this->group_string_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->group_string(i));
    }
  }

  // repeated .Pro.camptype camp_array = 5;
  {
    size_t data_size = 0;
    unsigned int count = this->camp_array_size();for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->camp_array(i));
    }
    total_size += (1UL * count) + data_size;
  }

  // repeated .Pro.ConfigTypeGroupcamptype camp_group = 6;
  {
    unsigned int count = this->camp_group_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->camp_group(i));
    }
  }

  // repeated .Pro.roleConfig.jobtype job = 7;
  {
    size_t data_size = 0;
    unsigned int count = this->job_size();for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->job(i));
    }
    total_size += (1UL * count) + data_size;
  }

  // repeated .Pro.roleConfig.ConfigTypeGroupjobtype job2 = 8;
  {
    unsigned int count = this->job2_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->job2(i));
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void roleConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Pro.roleConfig)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const roleConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const roleConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Pro.roleConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Pro.roleConfig)
    UnsafeMergeFrom(*source);
  }
}

void roleConfig::MergeFrom(const roleConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Pro.roleConfig)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void roleConfig::UnsafeMergeFrom(const roleConfig& from) {
  GOOGLE_DCHECK(&from != this);
  group_float_.MergeFrom(from.group_float_);
  group_string_.MergeFrom(from.group_string_);
  camp_array_.UnsafeMergeFrom(from.camp_array_);
  camp_group_.MergeFrom(from.camp_group_);
  job_.UnsafeMergeFrom(from.job_);
  job2_.MergeFrom(from.job2_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_has_id();
      id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
    }
    if (from.has_camp()) {
      set_camp(from.camp());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void roleConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Pro.roleConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void roleConfig::CopyFrom(const roleConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Pro.roleConfig)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool roleConfig::IsInitialized() const {

  return true;
}

void roleConfig::Swap(roleConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void roleConfig::InternalSwap(roleConfig* other) {
  id_.Swap(&other->id_);
  group_float_.UnsafeArenaSwap(&other->group_float_);
  group_string_.UnsafeArenaSwap(&other->group_string_);
  std::swap(camp_, other->camp_);
  camp_array_.UnsafeArenaSwap(&other->camp_array_);
  camp_group_.UnsafeArenaSwap(&other->camp_group_);
  job_.UnsafeArenaSwap(&other->job_);
  job2_.UnsafeArenaSwap(&other->job2_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata roleConfig::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = roleConfig_descriptor_;
  metadata.reflection = roleConfig_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// roleConfig_ConfigTypeGroupjobtype

// repeated .Pro.roleConfig.jobtype array = 1;
int roleConfig_ConfigTypeGroupjobtype::array_size() const {
  return array_.size();
}
void roleConfig_ConfigTypeGroupjobtype::clear_array() {
  array_.Clear();
}
::Pro::roleConfig_jobtype roleConfig_ConfigTypeGroupjobtype::array(int index) const {
  // @@protoc_insertion_point(field_get:Pro.roleConfig.ConfigTypeGroupjobtype.array)
  return static_cast< ::Pro::roleConfig_jobtype >(array_.Get(index));
}
void roleConfig_ConfigTypeGroupjobtype::set_array(int index, ::Pro::roleConfig_jobtype value) {
  assert(::Pro::roleConfig_jobtype_IsValid(value));
  array_.Set(index, value);
  // @@protoc_insertion_point(field_set:Pro.roleConfig.ConfigTypeGroupjobtype.array)
}
void roleConfig_ConfigTypeGroupjobtype::add_array(::Pro::roleConfig_jobtype value) {
  assert(::Pro::roleConfig_jobtype_IsValid(value));
  array_.Add(value);
  // @@protoc_insertion_point(field_add:Pro.roleConfig.ConfigTypeGroupjobtype.array)
}
const ::google::protobuf::RepeatedField<int>&
roleConfig_ConfigTypeGroupjobtype::array() const {
  // @@protoc_insertion_point(field_list:Pro.roleConfig.ConfigTypeGroupjobtype.array)
  return array_;
}
::google::protobuf::RepeatedField<int>*
roleConfig_ConfigTypeGroupjobtype::mutable_array() {
  // @@protoc_insertion_point(field_mutable_list:Pro.roleConfig.ConfigTypeGroupjobtype.array)
  return &array_;
}

inline const roleConfig_ConfigTypeGroupjobtype* roleConfig_ConfigTypeGroupjobtype::internal_default_instance() {
  return &roleConfig_ConfigTypeGroupjobtype_default_instance_.get();
}
// -------------------------------------------------------------------

// roleConfig

// optional string id = 1;
bool roleConfig::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void roleConfig::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
void roleConfig::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void roleConfig::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_id();
}
const ::std::string& roleConfig::id() const {
  // @@protoc_insertion_point(field_get:Pro.roleConfig.id)
  return id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void roleConfig::set_id(const ::std::string& value) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Pro.roleConfig.id)
}
void roleConfig::set_id(const char* value) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Pro.roleConfig.id)
}
void roleConfig::set_id(const char* value, size_t size) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Pro.roleConfig.id)
}
::std::string* roleConfig::mutable_id() {
  set_has_id();
  // @@protoc_insertion_point(field_mutable:Pro.roleConfig.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* roleConfig::release_id() {
  // @@protoc_insertion_point(field_release:Pro.roleConfig.id)
  clear_has_id();
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void roleConfig::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    set_has_id();
  } else {
    clear_has_id();
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:Pro.roleConfig.id)
}

// repeated .Pro.ConfigTypeGroupfloat group_float = 2;
int roleConfig::group_float_size() const {
  return group_float_.size();
}
void roleConfig::clear_group_float() {
  group_float_.Clear();
}
const ::Pro::ConfigTypeGroupfloat& roleConfig::group_float(int index) const {
  // @@protoc_insertion_point(field_get:Pro.roleConfig.group_float)
  return group_float_.Get(index);
}
::Pro::ConfigTypeGroupfloat* roleConfig::mutable_group_float(int index) {
  // @@protoc_insertion_point(field_mutable:Pro.roleConfig.group_float)
  return group_float_.Mutable(index);
}
::Pro::ConfigTypeGroupfloat* roleConfig::add_group_float() {
  // @@protoc_insertion_point(field_add:Pro.roleConfig.group_float)
  return group_float_.Add();
}
::google::protobuf::RepeatedPtrField< ::Pro::ConfigTypeGroupfloat >*
roleConfig::mutable_group_float() {
  // @@protoc_insertion_point(field_mutable_list:Pro.roleConfig.group_float)
  return &group_float_;
}
const ::google::protobuf::RepeatedPtrField< ::Pro::ConfigTypeGroupfloat >&
roleConfig::group_float() const {
  // @@protoc_insertion_point(field_list:Pro.roleConfig.group_float)
  return group_float_;
}

// repeated .Pro.ConfigTypeGroupstring group_string = 3;
int roleConfig::group_string_size() const {
  return group_string_.size();
}
void roleConfig::clear_group_string() {
  group_string_.Clear();
}
const ::Pro::ConfigTypeGroupstring& roleConfig::group_string(int index) const {
  // @@protoc_insertion_point(field_get:Pro.roleConfig.group_string)
  return group_string_.Get(index);
}
::Pro::ConfigTypeGroupstring* roleConfig::mutable_group_string(int index) {
  // @@protoc_insertion_point(field_mutable:Pro.roleConfig.group_string)
  return group_string_.Mutable(index);
}
::Pro::ConfigTypeGroupstring* roleConfig::add_group_string() {
  // @@protoc_insertion_point(field_add:Pro.roleConfig.group_string)
  return group_string_.Add();
}
::google::protobuf::RepeatedPtrField< ::Pro::ConfigTypeGroupstring >*
roleConfig::mutable_group_string() {
  // @@protoc_insertion_point(field_mutable_list:Pro.roleConfig.group_string)
  return &group_string_;
}
const ::google::protobuf::RepeatedPtrField< ::Pro::ConfigTypeGroupstring >&
roleConfig::group_string() const {
  // @@protoc_insertion_point(field_list:Pro.roleConfig.group_string)
  return group_string_;
}

// optional .Pro.camptype camp = 4;
bool roleConfig::has_camp() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void roleConfig::set_has_camp() {
  _has_bits_[0] |= 0x00000008u;
}
void roleConfig::clear_has_camp() {
  _has_bits_[0] &= ~0x00000008u;
}
void roleConfig::clear_camp() {
  camp_ = 1;
  clear_has_camp();
}
::Pro::camptype roleConfig::camp() const {
  // @@protoc_insertion_point(field_get:Pro.roleConfig.camp)
  return static_cast< ::Pro::camptype >(camp_);
}
void roleConfig::set_camp(::Pro::camptype value) {
  assert(::Pro::camptype_IsValid(value));
  set_has_camp();
  camp_ = value;
  // @@protoc_insertion_point(field_set:Pro.roleConfig.camp)
}

// repeated .Pro.camptype camp_array = 5;
int roleConfig::camp_array_size() const {
  return camp_array_.size();
}
void roleConfig::clear_camp_array() {
  camp_array_.Clear();
}
::Pro::camptype roleConfig::camp_array(int index) const {
  // @@protoc_insertion_point(field_get:Pro.roleConfig.camp_array)
  return static_cast< ::Pro::camptype >(camp_array_.Get(index));
}
void roleConfig::set_camp_array(int index, ::Pro::camptype value) {
  assert(::Pro::camptype_IsValid(value));
  camp_array_.Set(index, value);
  // @@protoc_insertion_point(field_set:Pro.roleConfig.camp_array)
}
void roleConfig::add_camp_array(::Pro::camptype value) {
  assert(::Pro::camptype_IsValid(value));
  camp_array_.Add(value);
  // @@protoc_insertion_point(field_add:Pro.roleConfig.camp_array)
}
const ::google::protobuf::RepeatedField<int>&
roleConfig::camp_array() const {
  // @@protoc_insertion_point(field_list:Pro.roleConfig.camp_array)
  return camp_array_;
}
::google::protobuf::RepeatedField<int>*
roleConfig::mutable_camp_array() {
  // @@protoc_insertion_point(field_mutable_list:Pro.roleConfig.camp_array)
  return &camp_array_;
}

// repeated .Pro.ConfigTypeGroupcamptype camp_group = 6;
int roleConfig::camp_group_size() const {
  return camp_group_.size();
}
void roleConfig::clear_camp_group() {
  camp_group_.Clear();
}
const ::Pro::ConfigTypeGroupcamptype& roleConfig::camp_group(int index) const {
  // @@protoc_insertion_point(field_get:Pro.roleConfig.camp_group)
  return camp_group_.Get(index);
}
::Pro::ConfigTypeGroupcamptype* roleConfig::mutable_camp_group(int index) {
  // @@protoc_insertion_point(field_mutable:Pro.roleConfig.camp_group)
  return camp_group_.Mutable(index);
}
::Pro::ConfigTypeGroupcamptype* roleConfig::add_camp_group() {
  // @@protoc_insertion_point(field_add:Pro.roleConfig.camp_group)
  return camp_group_.Add();
}
::google::protobuf::RepeatedPtrField< ::Pro::ConfigTypeGroupcamptype >*
roleConfig::mutable_camp_group() {
  // @@protoc_insertion_point(field_mutable_list:Pro.roleConfig.camp_group)
  return &camp_group_;
}
const ::google::protobuf::RepeatedPtrField< ::Pro::ConfigTypeGroupcamptype >&
roleConfig::camp_group() const {
  // @@protoc_insertion_point(field_list:Pro.roleConfig.camp_group)
  return camp_group_;
}

// repeated .Pro.roleConfig.jobtype job = 7;
int roleConfig::job_size() const {
  return job_.size();
}
void roleConfig::clear_job() {
  job_.Clear();
}
::Pro::roleConfig_jobtype roleConfig::job(int index) const {
  // @@protoc_insertion_point(field_get:Pro.roleConfig.job)
  return static_cast< ::Pro::roleConfig_jobtype >(job_.Get(index));
}
void roleConfig::set_job(int index, ::Pro::roleConfig_jobtype value) {
  assert(::Pro::roleConfig_jobtype_IsValid(value));
  job_.Set(index, value);
  // @@protoc_insertion_point(field_set:Pro.roleConfig.job)
}
void roleConfig::add_job(::Pro::roleConfig_jobtype value) {
  assert(::Pro::roleConfig_jobtype_IsValid(value));
  job_.Add(value);
  // @@protoc_insertion_point(field_add:Pro.roleConfig.job)
}
const ::google::protobuf::RepeatedField<int>&
roleConfig::job() const {
  // @@protoc_insertion_point(field_list:Pro.roleConfig.job)
  return job_;
}
::google::protobuf::RepeatedField<int>*
roleConfig::mutable_job() {
  // @@protoc_insertion_point(field_mutable_list:Pro.roleConfig.job)
  return &job_;
}

// repeated .Pro.roleConfig.ConfigTypeGroupjobtype job2 = 8;
int roleConfig::job2_size() const {
  return job2_.size();
}
void roleConfig::clear_job2() {
  job2_.Clear();
}
const ::Pro::roleConfig_ConfigTypeGroupjobtype& roleConfig::job2(int index) const {
  // @@protoc_insertion_point(field_get:Pro.roleConfig.job2)
  return job2_.Get(index);
}
::Pro::roleConfig_ConfigTypeGroupjobtype* roleConfig::mutable_job2(int index) {
  // @@protoc_insertion_point(field_mutable:Pro.roleConfig.job2)
  return job2_.Mutable(index);
}
::Pro::roleConfig_ConfigTypeGroupjobtype* roleConfig::add_job2() {
  // @@protoc_insertion_point(field_add:Pro.roleConfig.job2)
  return job2_.Add();
}
::google::protobuf::RepeatedPtrField< ::Pro::roleConfig_ConfigTypeGroupjobtype >*
roleConfig::mutable_job2() {
  // @@protoc_insertion_point(field_mutable_list:Pro.roleConfig.job2)
  return &job2_;
}
const ::google::protobuf::RepeatedPtrField< ::Pro::roleConfig_ConfigTypeGroupjobtype >&
roleConfig::job2() const {
  // @@protoc_insertion_point(field_list:Pro.roleConfig.job2)
  return job2_;
}

inline const roleConfig* roleConfig::internal_default_instance() {
  return &roleConfig_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace Pro

// @@protoc_insertion_point(global_scope)
