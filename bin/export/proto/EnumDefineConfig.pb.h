// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: EnumDefineConfig.proto

#ifndef PROTOBUF_INCLUDED_EnumDefineConfig_2eproto
#define PROTOBUF_INCLUDED_EnumDefineConfig_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_EnumDefineConfig_2eproto 

namespace protobuf_EnumDefineConfig_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_EnumDefineConfig_2eproto
namespace Pro {
class ConfigTypeGroupcamptype;
class ConfigTypeGroupcamptypeDefaultTypeInternal;
extern ConfigTypeGroupcamptypeDefaultTypeInternal _ConfigTypeGroupcamptype_default_instance_;
}  // namespace Pro
namespace google {
namespace protobuf {
template<> ::Pro::ConfigTypeGroupcamptype* Arena::CreateMaybeMessage<::Pro::ConfigTypeGroupcamptype>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace Pro {

enum camptype {
  unknow_zero = 0,
  camp_light = 1,
  camp_dark = 2,
  camptype_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  camptype_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool camptype_IsValid(int value);
const camptype camptype_MIN = unknow_zero;
const camptype camptype_MAX = camp_dark;
const int camptype_ARRAYSIZE = camptype_MAX + 1;

const ::google::protobuf::EnumDescriptor* camptype_descriptor();
inline const ::std::string& camptype_Name(camptype value) {
  return ::google::protobuf::internal::NameOfEnum(
    camptype_descriptor(), value);
}
inline bool camptype_Parse(
    const ::std::string& name, camptype* value) {
  return ::google::protobuf::internal::ParseNamedEnum<camptype>(
    camptype_descriptor(), name, value);
}
// ===================================================================

class ConfigTypeGroupcamptype : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Pro.ConfigTypeGroupcamptype) */ {
 public:
  ConfigTypeGroupcamptype();
  virtual ~ConfigTypeGroupcamptype();

  ConfigTypeGroupcamptype(const ConfigTypeGroupcamptype& from);

  inline ConfigTypeGroupcamptype& operator=(const ConfigTypeGroupcamptype& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ConfigTypeGroupcamptype(ConfigTypeGroupcamptype&& from) noexcept
    : ConfigTypeGroupcamptype() {
    *this = ::std::move(from);
  }

  inline ConfigTypeGroupcamptype& operator=(ConfigTypeGroupcamptype&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ConfigTypeGroupcamptype& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ConfigTypeGroupcamptype* internal_default_instance() {
    return reinterpret_cast<const ConfigTypeGroupcamptype*>(
               &_ConfigTypeGroupcamptype_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(ConfigTypeGroupcamptype* other);
  friend void swap(ConfigTypeGroupcamptype& a, ConfigTypeGroupcamptype& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ConfigTypeGroupcamptype* New() const final {
    return CreateMaybeMessage<ConfigTypeGroupcamptype>(NULL);
  }

  ConfigTypeGroupcamptype* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ConfigTypeGroupcamptype>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ConfigTypeGroupcamptype& from);
  void MergeFrom(const ConfigTypeGroupcamptype& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ConfigTypeGroupcamptype* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Pro.camptype array = 1;
  int array_size() const;
  void clear_array();
  static const int kArrayFieldNumber = 1;
  ::Pro::camptype array(int index) const;
  void set_array(int index, ::Pro::camptype value);
  void add_array(::Pro::camptype value);
  const ::google::protobuf::RepeatedField<int>& array() const;
  ::google::protobuf::RepeatedField<int>* mutable_array();

  // @@protoc_insertion_point(class_scope:Pro.ConfigTypeGroupcamptype)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField<int> array_;
  mutable int _array_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_EnumDefineConfig_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ConfigTypeGroupcamptype

// repeated .Pro.camptype array = 1;
inline int ConfigTypeGroupcamptype::array_size() const {
  return array_.size();
}
inline void ConfigTypeGroupcamptype::clear_array() {
  array_.Clear();
}
inline ::Pro::camptype ConfigTypeGroupcamptype::array(int index) const {
  // @@protoc_insertion_point(field_get:Pro.ConfigTypeGroupcamptype.array)
  return static_cast< ::Pro::camptype >(array_.Get(index));
}
inline void ConfigTypeGroupcamptype::set_array(int index, ::Pro::camptype value) {
  array_.Set(index, value);
  // @@protoc_insertion_point(field_set:Pro.ConfigTypeGroupcamptype.array)
}
inline void ConfigTypeGroupcamptype::add_array(::Pro::camptype value) {
  array_.Add(value);
  // @@protoc_insertion_point(field_add:Pro.ConfigTypeGroupcamptype.array)
}
inline const ::google::protobuf::RepeatedField<int>&
ConfigTypeGroupcamptype::array() const {
  // @@protoc_insertion_point(field_list:Pro.ConfigTypeGroupcamptype.array)
  return array_;
}
inline ::google::protobuf::RepeatedField<int>*
ConfigTypeGroupcamptype::mutable_array() {
  // @@protoc_insertion_point(field_mutable_list:Pro.ConfigTypeGroupcamptype.array)
  return &array_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace Pro

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::Pro::camptype> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Pro::camptype>() {
  return ::Pro::camptype_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_EnumDefineConfig_2eproto
